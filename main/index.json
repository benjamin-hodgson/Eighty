{
  "Eighty.Attr.html": {
    "href": "Eighty.Attr.html",
    "title": "Class Attr | Eighty",
    "keywords": "Class Attr Represents an HTML attribute. Inheritance Object Attr Declaration public sealed class Attr : ValueType Constructors Attr(String) Create a Boolean HTML attribute. Declaration public Attr(string name) Parameters Type Name Description String name The name of the attribute Attr(String, String) Create an HTML attribute. Declaration public Attr(string name, string value) Parameters Type Name Description String name The name of the attribute String value The value Methods FromValueTuple((String, String)) Create an HTML attribute. Declaration public static Attr FromValueTuple((string, string) nameValue) Parameters Type Name Description (, ) < String , String > nameValue The name and value of the attribute Returns Type Description Attr Raw(String) Create a Boolean HTML attribute without HTML-encoding the name first. Declaration public static Attr Raw(string name) Parameters Type Name Description String name The pre-encoded name Returns Type Description Attr An HTML attribute Raw(String, String) Create an HTML attribute without HTML-encoding the name and value first. Declaration public static Attr Raw(string name, string value) Parameters Type Name Description String name The pre-encoded name String value The pre-encoded value Returns Type Description Attr An HTML attribute Operators Implicit((String, String) to Attr) Create an HTML attribute. Declaration public static implicit operator Attr((string, string) nameValue) Parameters Type Name Description (, ) < String , String > nameValue The name and value of the attribute Returns Type Description Attr"
  },
  "Eighty.html": {
    "href": "Eighty.html",
    "title": "Namespace Eighty | Eighty",
    "keywords": "Namespace Eighty Classes Attr Represents an HTML attribute. Html Represents HTML that can be written to a stream TagBuilder Represents a \"half-open\" HTML tag which is waiting for its children. Interfaces IHtmlRenderer<TModel> Represents a process which can render a TModel as Html"
  },
  "Eighty.Html.html": {
    "href": "Eighty.Html.html",
    "title": "Class Html | Eighty",
    "keywords": "Class Html Represents HTML that can be written to a stream Inheritance Object Html Declaration public abstract class Html : Object Properties CanWriteAsync Can this Html write itself asynchronously? Returns false if the HTML contains any calls to Builder(Func<HtmlBuilder>) . If this returns false, WriteAsync(TextWriter) will throw InvalidOperationException Declaration public bool CanWriteAsync { get; } Property Value Type Description Boolean A Boolean indicating whether this Html can write itself asynchronously Empty An empty chunk of Html Declaration public static Html Empty { get; } Property Value Type Description Html Methods _(Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1) Parameters Type Name Description Html sibling1 Returns Type Description Html _(Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2) Parameters Type Name Description Html sibling1 Html sibling2 Returns Type Description Html _(Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Returns Type Description Html _(Html, Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3, Html sibling4) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Html sibling4 Returns Type Description Html _(Html, Html, Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3, Html sibling4, Html sibling5) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Html sibling4 Html sibling5 Returns Type Description Html _(Html, Html, Html, Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3, Html sibling4, Html sibling5, Html sibling6) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Html sibling4 Html sibling5 Html sibling6 Returns Type Description Html _(Html, Html, Html, Html, Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3, Html sibling4, Html sibling5, Html sibling6, Html sibling7) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Html sibling4 Html sibling5 Html sibling6 Html sibling7 Returns Type Description Html _(Html, Html, Html, Html, Html, Html, Html, Html) Put some siblings next to each other. Declaration public static Html _(Html sibling1, Html sibling2, Html sibling3, Html sibling4, Html sibling5, Html sibling6, Html sibling7, Html sibling8) Parameters Type Name Description Html sibling1 Html sibling2 Html sibling3 Html sibling4 Html sibling5 Html sibling6 Html sibling7 Html sibling8 Returns Type Description Html _(Html[]) Put some siblings next to each other. Declaration public static Html _(params Html[] siblings) Parameters Type Name Description Html [] siblings Returns Type Description Html _(IEnumerable<Html>) Put some siblings next to each other. Declaration public static Html _(IEnumerable<Html> siblings) Parameters Type Name Description IEnumerable < Html > siblings Returns Type Description Html _(List<Html>) Put some siblings next to each other. Declaration public static Html _(List<Html> siblings) Parameters Type Name Description List < Html > siblings Returns Type Description Html _(ImmutableArray<Html>) Put some siblings next to each other. Declaration public static Html _(ImmutableArray<Html> siblings) Parameters Type Name Description ImmutableArray < Html > siblings Returns Type Description Html _(ImmutableList<Html>) Put some siblings next to each other. Declaration public static Html _(ImmutableList<Html> siblings) Parameters Type Name Description ImmutableList < Html > siblings Returns Type Description Html a(Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr, Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an a element. Declaration public static TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(Attr[]) Build an a element. Declaration public static TagBuilder a(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(IEnumerable<Attr>) Build an a element. Declaration public static TagBuilder a(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children a(String, String, String, String, String, String, String, String, String, String, String) Build an a element. Declaration public static TagBuilder a(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string href = null, string rel = null, string target = null, string type = null, string download = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String href String rel String target String type String download Returns Type Description TagBuilder A TagBuilder waiting for the element's children a_(Html) Build an a element without any attributes. Declaration public static Html a_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element a_(Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element a_(Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element a_(Html, Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element a_(Html, Html, Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element a_(Html, Html, Html, Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element a_(Html, Html, Html, Html, Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element a_(Html, Html, Html, Html, Html, Html, Html, Html) Build an a element without any attributes. Declaration public static Html a_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element a_(Html[]) Build an a element without any attributes. Declaration public static Html a_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element a_(IEnumerable<Html>) Build an a element without any attributes. Declaration public static Html a_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element a_(List<Html>) Build an a element without any attributes. Declaration public static Html a_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element a_(ImmutableArray<Html>) Build an a element without any attributes. Declaration public static Html a_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element a_(ImmutableList<Html>) Build an a element without any attributes. Declaration public static Html a_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element abbr(Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr, Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an abbr element. Declaration public static TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(Attr[]) Build an abbr element. Declaration public static TagBuilder abbr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(IEnumerable<Attr>) Build an abbr element. Declaration public static TagBuilder abbr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr(String, String, String, String, String, String) Build an abbr element. Declaration public static TagBuilder abbr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children abbr_(Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element abbr_(Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element abbr_(Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element abbr_(Html, Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element abbr_(Html, Html, Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element abbr_(Html, Html, Html, Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element abbr_(Html, Html, Html, Html, Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element abbr_(Html, Html, Html, Html, Html, Html, Html, Html) Build an abbr element without any attributes. Declaration public static Html abbr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element abbr_(Html[]) Build an abbr element without any attributes. Declaration public static Html abbr_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element abbr_(IEnumerable<Html>) Build an abbr element without any attributes. Declaration public static Html abbr_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element abbr_(List<Html>) Build an abbr element without any attributes. Declaration public static Html abbr_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element abbr_(ImmutableArray<Html>) Build an abbr element without any attributes. Declaration public static Html abbr_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element abbr_(ImmutableList<Html>) Build an abbr element without any attributes. Declaration public static Html abbr_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element address(Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr, Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an address element. Declaration public static TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(Attr[]) Build an address element. Declaration public static TagBuilder address(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(IEnumerable<Attr>) Build an address element. Declaration public static TagBuilder address(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children address(String, String, String, String, String, String) Build an address element. Declaration public static TagBuilder address(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children address_(Html) Build an address element without any attributes. Declaration public static Html address_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element address_(Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element address_(Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element address_(Html, Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element address_(Html, Html, Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element address_(Html, Html, Html, Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element address_(Html, Html, Html, Html, Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element address_(Html, Html, Html, Html, Html, Html, Html, Html) Build an address element without any attributes. Declaration public static Html address_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element address_(Html[]) Build an address element without any attributes. Declaration public static Html address_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element address_(IEnumerable<Html>) Build an address element without any attributes. Declaration public static Html address_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element address_(List<Html>) Build an address element without any attributes. Declaration public static Html address_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element address_(ImmutableArray<Html>) Build an address element without any attributes. Declaration public static Html address_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element address_(ImmutableList<Html>) Build an address element without any attributes. Declaration public static Html address_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element article(Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr, Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an article element. Declaration public static TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(Attr[]) Build an article element. Declaration public static TagBuilder article(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(IEnumerable<Attr>) Build an article element. Declaration public static TagBuilder article(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children article(String, String, String, String, String, String) Build an article element. Declaration public static TagBuilder article(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children article_(Html) Build an article element without any attributes. Declaration public static Html article_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element article_(Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element article_(Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element article_(Html, Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element article_(Html, Html, Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element article_(Html, Html, Html, Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element article_(Html, Html, Html, Html, Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element article_(Html, Html, Html, Html, Html, Html, Html, Html) Build an article element without any attributes. Declaration public static Html article_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element article_(Html[]) Build an article element without any attributes. Declaration public static Html article_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element article_(IEnumerable<Html>) Build an article element without any attributes. Declaration public static Html article_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element article_(List<Html>) Build an article element without any attributes. Declaration public static Html article_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element article_(ImmutableArray<Html>) Build an article element without any attributes. Declaration public static Html article_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element article_(ImmutableList<Html>) Build an article element without any attributes. Declaration public static Html article_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element aside(Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr, Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an aside element. Declaration public static TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(Attr[]) Build an aside element. Declaration public static TagBuilder aside(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(IEnumerable<Attr>) Build an aside element. Declaration public static TagBuilder aside(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside(String, String, String, String, String, String) Build an aside element. Declaration public static TagBuilder aside(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children aside_(Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element aside_(Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element aside_(Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element aside_(Html, Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element aside_(Html, Html, Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element aside_(Html, Html, Html, Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element aside_(Html, Html, Html, Html, Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element aside_(Html, Html, Html, Html, Html, Html, Html, Html) Build an aside element without any attributes. Declaration public static Html aside_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element aside_(Html[]) Build an aside element without any attributes. Declaration public static Html aside_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element aside_(IEnumerable<Html>) Build an aside element without any attributes. Declaration public static Html aside_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element aside_(List<Html>) Build an aside element without any attributes. Declaration public static Html aside_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element aside_(ImmutableArray<Html>) Build an aside element without any attributes. Declaration public static Html aside_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element aside_(ImmutableList<Html>) Build an aside element without any attributes. Declaration public static Html aside_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element audio(Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr, Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an audio element. Declaration public static TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(Attr[]) Build an audio element. Declaration public static TagBuilder audio(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(IEnumerable<Attr>) Build an audio element. Declaration public static TagBuilder audio(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio(String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean) Build an audio element. Declaration public static TagBuilder audio(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string preload = null, string volume = null, bool autoplay = false, bool loop = false, bool muted = false, bool controls = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String preload String volume Boolean autoplay Boolean loop Boolean muted Boolean controls Returns Type Description TagBuilder A TagBuilder waiting for the element's children audio_(Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element audio_(Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element audio_(Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element audio_(Html, Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element audio_(Html, Html, Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element audio_(Html, Html, Html, Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element audio_(Html, Html, Html, Html, Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element audio_(Html, Html, Html, Html, Html, Html, Html, Html) Build an audio element without any attributes. Declaration public static Html audio_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element audio_(Html[]) Build an audio element without any attributes. Declaration public static Html audio_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element audio_(IEnumerable<Html>) Build an audio element without any attributes. Declaration public static Html audio_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element audio_(List<Html>) Build an audio element without any attributes. Declaration public static Html audio_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element audio_(ImmutableArray<Html>) Build an audio element without any attributes. Declaration public static Html audio_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element audio_(ImmutableList<Html>) Build an audio element without any attributes. Declaration public static Html audio_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element b(Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr, Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a b element. Declaration public static TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(Attr[]) Build a b element. Declaration public static TagBuilder b(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(IEnumerable<Attr>) Build a b element. Declaration public static TagBuilder b(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children b(String, String, String, String, String, String) Build a b element. Declaration public static TagBuilder b(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children b_(Html) Build a b element without any attributes. Declaration public static Html b_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element b_(Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element b_(Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element b_(Html, Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element b_(Html, Html, Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element b_(Html, Html, Html, Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element b_(Html, Html, Html, Html, Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element b_(Html, Html, Html, Html, Html, Html, Html, Html) Build a b element without any attributes. Declaration public static Html b_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element b_(Html[]) Build a b element without any attributes. Declaration public static Html b_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element b_(IEnumerable<Html>) Build a b element without any attributes. Declaration public static Html b_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element b_(List<Html>) Build a b element without any attributes. Declaration public static Html b_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element b_(ImmutableArray<Html>) Build a b element without any attributes. Declaration public static Html b_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element b_(ImmutableList<Html>) Build a b element without any attributes. Declaration public static Html b_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element base(Attr) Build a base element. Declaration public static Html base(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element base(Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element base(Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element base(Attr, Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element base(Attr, Attr, Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element base(Attr, Attr, Attr, Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element base(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element base(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a base element. Declaration public static Html base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element base(Attr[]) Build a base element. Declaration public static Html base(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element base(IEnumerable<Attr>) Build a base element. Declaration public static Html base(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element base(String, String, String, String, String, String, String, String) Build a base element. Declaration public static Html base(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string href = null, string target = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String href String target Returns Type Description Html The element bdi(Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr, Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a bdi element. Declaration public static TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(Attr[]) Build a bdi element. Declaration public static TagBuilder bdi(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(IEnumerable<Attr>) Build a bdi element. Declaration public static TagBuilder bdi(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi(String, String, String, String, String, String, String) Build a bdi element. Declaration public static TagBuilder bdi(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string dir = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String dir Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdi_(Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element bdi_(Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element bdi_(Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element bdi_(Html, Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element bdi_(Html, Html, Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element bdi_(Html, Html, Html, Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element bdi_(Html, Html, Html, Html, Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element bdi_(Html, Html, Html, Html, Html, Html, Html, Html) Build a bdi element without any attributes. Declaration public static Html bdi_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element bdi_(Html[]) Build a bdi element without any attributes. Declaration public static Html bdi_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element bdi_(IEnumerable<Html>) Build a bdi element without any attributes. Declaration public static Html bdi_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element bdi_(List<Html>) Build a bdi element without any attributes. Declaration public static Html bdi_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element bdi_(ImmutableArray<Html>) Build a bdi element without any attributes. Declaration public static Html bdi_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element bdi_(ImmutableList<Html>) Build a bdi element without any attributes. Declaration public static Html bdi_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element bdo(Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr, Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a bdo element. Declaration public static TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(Attr[]) Build a bdo element. Declaration public static TagBuilder bdo(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(IEnumerable<Attr>) Build a bdo element. Declaration public static TagBuilder bdo(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo(String, String, String, String, String, String, String) Build a bdo element. Declaration public static TagBuilder bdo(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string dir = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String dir Returns Type Description TagBuilder A TagBuilder waiting for the element's children bdo_(Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element bdo_(Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element bdo_(Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element bdo_(Html, Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element bdo_(Html, Html, Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element bdo_(Html, Html, Html, Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element bdo_(Html, Html, Html, Html, Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element bdo_(Html, Html, Html, Html, Html, Html, Html, Html) Build a bdo element without any attributes. Declaration public static Html bdo_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element bdo_(Html[]) Build a bdo element without any attributes. Declaration public static Html bdo_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element bdo_(IEnumerable<Html>) Build a bdo element without any attributes. Declaration public static Html bdo_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element bdo_(List<Html>) Build a bdo element without any attributes. Declaration public static Html bdo_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element bdo_(ImmutableArray<Html>) Build a bdo element without any attributes. Declaration public static Html bdo_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element bdo_(ImmutableList<Html>) Build a bdo element without any attributes. Declaration public static Html bdo_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element blockquote(Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr, Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a blockquote element. Declaration public static TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(Attr[]) Build a blockquote element. Declaration public static TagBuilder blockquote(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(IEnumerable<Attr>) Build a blockquote element. Declaration public static TagBuilder blockquote(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote(String, String, String, String, String, String) Build a blockquote element. Declaration public static TagBuilder blockquote(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children blockquote_(Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element blockquote_(Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element blockquote_(Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element blockquote_(Html, Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element blockquote_(Html, Html, Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element blockquote_(Html, Html, Html, Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element blockquote_(Html, Html, Html, Html, Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element blockquote_(Html, Html, Html, Html, Html, Html, Html, Html) Build a blockquote element without any attributes. Declaration public static Html blockquote_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element blockquote_(Html[]) Build a blockquote element without any attributes. Declaration public static Html blockquote_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element blockquote_(IEnumerable<Html>) Build a blockquote element without any attributes. Declaration public static Html blockquote_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element blockquote_(List<Html>) Build a blockquote element without any attributes. Declaration public static Html blockquote_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element blockquote_(ImmutableArray<Html>) Build a blockquote element without any attributes. Declaration public static Html blockquote_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element blockquote_(ImmutableList<Html>) Build a blockquote element without any attributes. Declaration public static Html blockquote_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element body(Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr, Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a body element. Declaration public static TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(Attr[]) Build a body element. Declaration public static TagBuilder body(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(IEnumerable<Attr>) Build a body element. Declaration public static TagBuilder body(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children body(String, String, String, String, String, String) Build a body element. Declaration public static TagBuilder body(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children body_(Html) Build a body element without any attributes. Declaration public static Html body_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element body_(Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element body_(Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element body_(Html, Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element body_(Html, Html, Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element body_(Html, Html, Html, Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element body_(Html, Html, Html, Html, Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element body_(Html, Html, Html, Html, Html, Html, Html, Html) Build a body element without any attributes. Declaration public static Html body_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element body_(Html[]) Build a body element without any attributes. Declaration public static Html body_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element body_(IEnumerable<Html>) Build a body element without any attributes. Declaration public static Html body_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element body_(List<Html>) Build a body element without any attributes. Declaration public static Html body_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element body_(ImmutableArray<Html>) Build a body element without any attributes. Declaration public static Html body_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element body_(ImmutableList<Html>) Build a body element without any attributes. Declaration public static Html body_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element br(Attr) Build a br element. Declaration public static Html br(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element br(Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element br(Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element br(Attr, Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element br(Attr, Attr, Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element br(Attr, Attr, Attr, Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element br(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element br(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a br element. Declaration public static Html br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element br(Attr[]) Build a br element. Declaration public static Html br(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element br(IEnumerable<Attr>) Build a br element. Declaration public static Html br(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element br(String, String, String, String, String, String) Build a br element. Declaration public static Html br(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description Html The element Builder(Func<HtmlBuilder>) Run the HtmlBuilder returned by builderFactory . The Html returned from this method cannot write itself asynchronously; its CanWriteAsync will return false and its WriteAsync(TextWriter) method will throw InvalidOperationException . builderFactory should generally return a newly created HtmlBuilder , not a cached instance. Returning a cached HtmlBuilder is risky if it's possible that this Html 's Write(TextWriter) method will be called concurrently by multiple threads. Declaration public static Html Builder(Func<HtmlBuilder> builderFactory) Parameters Type Name Description Func < HtmlBuilder > builderFactory A function to create an HtmlBuilder Returns Type Description Html An instance of Html . button(Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr, Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a button element. Declaration public static TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(Attr[]) Build a button element. Declaration public static TagBuilder button(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(IEnumerable<Attr>) Build a button element. Declaration public static TagBuilder button(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children button(String, String, String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, String, String, String, String, String, Boolean) Build a button element. Declaration public static TagBuilder button(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string type = null, string value = null, bool autofocus = false, bool disabled = false, string src = null, string height = null, string width = null, string form = null, string formaction = null, string formmethod = null, string formtarget = null, string formenctype = null, bool formnovalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String type String value Boolean autofocus Boolean disabled String src String height String width String form String formaction String formmethod String formtarget String formenctype Boolean formnovalidate Returns Type Description TagBuilder A TagBuilder waiting for the element's children button_(Html) Build a button element without any attributes. Declaration public static Html button_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element button_(Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element button_(Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element button_(Html, Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element button_(Html, Html, Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element button_(Html, Html, Html, Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element button_(Html, Html, Html, Html, Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element button_(Html, Html, Html, Html, Html, Html, Html, Html) Build a button element without any attributes. Declaration public static Html button_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element button_(Html[]) Build a button element without any attributes. Declaration public static Html button_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element button_(IEnumerable<Html>) Build a button element without any attributes. Declaration public static Html button_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element button_(List<Html>) Build a button element without any attributes. Declaration public static Html button_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element button_(ImmutableArray<Html>) Build a button element without any attributes. Declaration public static Html button_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element button_(ImmutableList<Html>) Build a button element without any attributes. Declaration public static Html button_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element canvas(Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr, Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a canvas element. Declaration public static TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(Attr[]) Build a canvas element. Declaration public static TagBuilder canvas(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(IEnumerable<Attr>) Build a canvas element. Declaration public static TagBuilder canvas(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas(String, String, String, String, String, String, String, String) Build a canvas element. Declaration public static TagBuilder canvas(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string height = null, string width = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String height String width Returns Type Description TagBuilder A TagBuilder waiting for the element's children canvas_(Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element canvas_(Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element canvas_(Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element canvas_(Html, Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element canvas_(Html, Html, Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element canvas_(Html, Html, Html, Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element canvas_(Html, Html, Html, Html, Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element canvas_(Html, Html, Html, Html, Html, Html, Html, Html) Build a canvas element without any attributes. Declaration public static Html canvas_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element canvas_(Html[]) Build a canvas element without any attributes. Declaration public static Html canvas_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element canvas_(IEnumerable<Html>) Build a canvas element without any attributes. Declaration public static Html canvas_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element canvas_(List<Html>) Build a canvas element without any attributes. Declaration public static Html canvas_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element canvas_(ImmutableArray<Html>) Build a canvas element without any attributes. Declaration public static Html canvas_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element canvas_(ImmutableList<Html>) Build a canvas element without any attributes. Declaration public static Html canvas_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element caption(Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr, Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a caption element. Declaration public static TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(Attr[]) Build a caption element. Declaration public static TagBuilder caption(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(IEnumerable<Attr>) Build a caption element. Declaration public static TagBuilder caption(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption(String, String, String, String, String, String) Build a caption element. Declaration public static TagBuilder caption(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children caption_(Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element caption_(Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element caption_(Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element caption_(Html, Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element caption_(Html, Html, Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element caption_(Html, Html, Html, Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element caption_(Html, Html, Html, Html, Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element caption_(Html, Html, Html, Html, Html, Html, Html, Html) Build a caption element without any attributes. Declaration public static Html caption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element caption_(Html[]) Build a caption element without any attributes. Declaration public static Html caption_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element caption_(IEnumerable<Html>) Build a caption element without any attributes. Declaration public static Html caption_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element caption_(List<Html>) Build a caption element without any attributes. Declaration public static Html caption_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element caption_(ImmutableArray<Html>) Build a caption element without any attributes. Declaration public static Html caption_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element caption_(ImmutableList<Html>) Build a caption element without any attributes. Declaration public static Html caption_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element cite(Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr, Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a cite element. Declaration public static TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(Attr[]) Build a cite element. Declaration public static TagBuilder cite(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(IEnumerable<Attr>) Build a cite element. Declaration public static TagBuilder cite(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite(String, String, String, String, String, String) Build a cite element. Declaration public static TagBuilder cite(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children cite_(Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element cite_(Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element cite_(Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element cite_(Html, Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element cite_(Html, Html, Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element cite_(Html, Html, Html, Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element cite_(Html, Html, Html, Html, Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element cite_(Html, Html, Html, Html, Html, Html, Html, Html) Build a cite element without any attributes. Declaration public static Html cite_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element cite_(Html[]) Build a cite element without any attributes. Declaration public static Html cite_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element cite_(IEnumerable<Html>) Build a cite element without any attributes. Declaration public static Html cite_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element cite_(List<Html>) Build a cite element without any attributes. Declaration public static Html cite_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element cite_(ImmutableArray<Html>) Build a cite element without any attributes. Declaration public static Html cite_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element cite_(ImmutableList<Html>) Build a cite element without any attributes. Declaration public static Html cite_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element code(Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr, Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a code element. Declaration public static TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(Attr[]) Build a code element. Declaration public static TagBuilder code(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(IEnumerable<Attr>) Build a code element. Declaration public static TagBuilder code(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children code(String, String, String, String, String, String) Build a code element. Declaration public static TagBuilder code(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children code_(Html) Build a code element without any attributes. Declaration public static Html code_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element code_(Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element code_(Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element code_(Html, Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element code_(Html, Html, Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element code_(Html, Html, Html, Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element code_(Html, Html, Html, Html, Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element code_(Html, Html, Html, Html, Html, Html, Html, Html) Build a code element without any attributes. Declaration public static Html code_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element code_(Html[]) Build a code element without any attributes. Declaration public static Html code_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element code_(IEnumerable<Html>) Build a code element without any attributes. Declaration public static Html code_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element code_(List<Html>) Build a code element without any attributes. Declaration public static Html code_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element code_(ImmutableArray<Html>) Build a code element without any attributes. Declaration public static Html code_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element code_(ImmutableList<Html>) Build a code element without any attributes. Declaration public static Html code_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element col(Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr, Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a col element. Declaration public static TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(Attr[]) Build a col element. Declaration public static TagBuilder col(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(IEnumerable<Attr>) Build a col element. Declaration public static TagBuilder col(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children col(String, String, String, String, String, String, String) Build a col element. Declaration public static TagBuilder col(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string span = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String span Returns Type Description TagBuilder A TagBuilder waiting for the element's children col_(Html) Build a col element without any attributes. Declaration public static Html col_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element col_(Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element col_(Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element col_(Html, Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element col_(Html, Html, Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element col_(Html, Html, Html, Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element col_(Html, Html, Html, Html, Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element col_(Html, Html, Html, Html, Html, Html, Html, Html) Build a col element without any attributes. Declaration public static Html col_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element col_(Html[]) Build a col element without any attributes. Declaration public static Html col_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element col_(IEnumerable<Html>) Build a col element without any attributes. Declaration public static Html col_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element col_(List<Html>) Build a col element without any attributes. Declaration public static Html col_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element col_(ImmutableArray<Html>) Build a col element without any attributes. Declaration public static Html col_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element col_(ImmutableList<Html>) Build a col element without any attributes. Declaration public static Html col_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element colgroup(Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr, Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a colgroup element. Declaration public static TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(Attr[]) Build a colgroup element. Declaration public static TagBuilder colgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(IEnumerable<Attr>) Build a colgroup element. Declaration public static TagBuilder colgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup(String, String, String, String, String, String, String) Build a colgroup element. Declaration public static TagBuilder colgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string span = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String span Returns Type Description TagBuilder A TagBuilder waiting for the element's children colgroup_(Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element colgroup_(Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element colgroup_(Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element colgroup_(Html, Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element colgroup_(Html, Html, Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element colgroup_(Html, Html, Html, Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element colgroup_(Html, Html, Html, Html, Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element colgroup_(Html, Html, Html, Html, Html, Html, Html, Html) Build a colgroup element without any attributes. Declaration public static Html colgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element colgroup_(Html[]) Build a colgroup element without any attributes. Declaration public static Html colgroup_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element colgroup_(IEnumerable<Html>) Build a colgroup element without any attributes. Declaration public static Html colgroup_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element colgroup_(List<Html>) Build a colgroup element without any attributes. Declaration public static Html colgroup_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element colgroup_(ImmutableArray<Html>) Build a colgroup element without any attributes. Declaration public static Html colgroup_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element colgroup_(ImmutableList<Html>) Build a colgroup element without any attributes. Declaration public static Html colgroup_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element data(Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr, Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a data element. Declaration public static TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(Attr[]) Build a data element. Declaration public static TagBuilder data(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(IEnumerable<Attr>) Build a data element. Declaration public static TagBuilder data(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children data(String, String, String, String, String, String, String) Build a data element. Declaration public static TagBuilder data(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value Returns Type Description TagBuilder A TagBuilder waiting for the element's children data_(Html) Build a data element without any attributes. Declaration public static Html data_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element data_(Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element data_(Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element data_(Html, Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element data_(Html, Html, Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element data_(Html, Html, Html, Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element data_(Html, Html, Html, Html, Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element data_(Html, Html, Html, Html, Html, Html, Html, Html) Build a data element without any attributes. Declaration public static Html data_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element data_(Html[]) Build a data element without any attributes. Declaration public static Html data_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element data_(IEnumerable<Html>) Build a data element without any attributes. Declaration public static Html data_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element data_(List<Html>) Build a data element without any attributes. Declaration public static Html data_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element data_(ImmutableArray<Html>) Build a data element without any attributes. Declaration public static Html data_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element data_(ImmutableList<Html>) Build a data element without any attributes. Declaration public static Html data_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element datalist(Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr, Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a datalist element. Declaration public static TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(Attr[]) Build a datalist element. Declaration public static TagBuilder datalist(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(IEnumerable<Attr>) Build a datalist element. Declaration public static TagBuilder datalist(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist(String, String, String, String, String, String) Build a datalist element. Declaration public static TagBuilder datalist(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children datalist_(Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element datalist_(Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element datalist_(Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element datalist_(Html, Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element datalist_(Html, Html, Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element datalist_(Html, Html, Html, Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element datalist_(Html, Html, Html, Html, Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element datalist_(Html, Html, Html, Html, Html, Html, Html, Html) Build a datalist element without any attributes. Declaration public static Html datalist_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element datalist_(Html[]) Build a datalist element without any attributes. Declaration public static Html datalist_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element datalist_(IEnumerable<Html>) Build a datalist element without any attributes. Declaration public static Html datalist_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element datalist_(List<Html>) Build a datalist element without any attributes. Declaration public static Html datalist_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element datalist_(ImmutableArray<Html>) Build a datalist element without any attributes. Declaration public static Html datalist_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element datalist_(ImmutableList<Html>) Build a datalist element without any attributes. Declaration public static Html datalist_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element dd(Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr, Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dd element. Declaration public static TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(Attr[]) Build a dd element. Declaration public static TagBuilder dd(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(IEnumerable<Attr>) Build a dd element. Declaration public static TagBuilder dd(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd(String, String, String, String, String, String) Build a dd element. Declaration public static TagBuilder dd(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children dd_(Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element dd_(Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element dd_(Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element dd_(Html, Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element dd_(Html, Html, Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element dd_(Html, Html, Html, Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element dd_(Html, Html, Html, Html, Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element dd_(Html, Html, Html, Html, Html, Html, Html, Html) Build a dd element without any attributes. Declaration public static Html dd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element dd_(Html[]) Build a dd element without any attributes. Declaration public static Html dd_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element dd_(IEnumerable<Html>) Build a dd element without any attributes. Declaration public static Html dd_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element dd_(List<Html>) Build a dd element without any attributes. Declaration public static Html dd_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element dd_(ImmutableArray<Html>) Build a dd element without any attributes. Declaration public static Html dd_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element dd_(ImmutableList<Html>) Build a dd element without any attributes. Declaration public static Html dd_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element details(Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr, Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a details element. Declaration public static TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(Attr[]) Build a details element. Declaration public static TagBuilder details(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(IEnumerable<Attr>) Build a details element. Declaration public static TagBuilder details(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children details(String, String, String, String, String, String, Boolean) Build a details element. Declaration public static TagBuilder details(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, bool open = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Boolean open Returns Type Description TagBuilder A TagBuilder waiting for the element's children details_(Html) Build a details element without any attributes. Declaration public static Html details_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element details_(Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element details_(Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element details_(Html, Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element details_(Html, Html, Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element details_(Html, Html, Html, Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element details_(Html, Html, Html, Html, Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element details_(Html, Html, Html, Html, Html, Html, Html, Html) Build a details element without any attributes. Declaration public static Html details_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element details_(Html[]) Build a details element without any attributes. Declaration public static Html details_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element details_(IEnumerable<Html>) Build a details element without any attributes. Declaration public static Html details_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element details_(List<Html>) Build a details element without any attributes. Declaration public static Html details_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element details_(ImmutableArray<Html>) Build a details element without any attributes. Declaration public static Html details_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element details_(ImmutableList<Html>) Build a details element without any attributes. Declaration public static Html details_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element dfn(Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr, Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dfn element. Declaration public static TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(Attr[]) Build a dfn element. Declaration public static TagBuilder dfn(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(IEnumerable<Attr>) Build a dfn element. Declaration public static TagBuilder dfn(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn(String, String, String, String, String, String) Build a dfn element. Declaration public static TagBuilder dfn(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children dfn_(Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element dfn_(Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element dfn_(Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element dfn_(Html, Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element dfn_(Html, Html, Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element dfn_(Html, Html, Html, Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element dfn_(Html, Html, Html, Html, Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element dfn_(Html, Html, Html, Html, Html, Html, Html, Html) Build a dfn element without any attributes. Declaration public static Html dfn_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element dfn_(Html[]) Build a dfn element without any attributes. Declaration public static Html dfn_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element dfn_(IEnumerable<Html>) Build a dfn element without any attributes. Declaration public static Html dfn_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element dfn_(List<Html>) Build a dfn element without any attributes. Declaration public static Html dfn_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element dfn_(ImmutableArray<Html>) Build a dfn element without any attributes. Declaration public static Html dfn_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element dfn_(ImmutableList<Html>) Build a dfn element without any attributes. Declaration public static Html dfn_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element dialog(Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr, Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dialog element. Declaration public static TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(Attr[]) Build a dialog element. Declaration public static TagBuilder dialog(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(IEnumerable<Attr>) Build a dialog element. Declaration public static TagBuilder dialog(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog(String, String, String, String, String, String, Boolean) Build a dialog element. Declaration public static TagBuilder dialog(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, bool open = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Boolean open Returns Type Description TagBuilder A TagBuilder waiting for the element's children dialog_(Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element dialog_(Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element dialog_(Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element dialog_(Html, Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element dialog_(Html, Html, Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element dialog_(Html, Html, Html, Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element dialog_(Html, Html, Html, Html, Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element dialog_(Html, Html, Html, Html, Html, Html, Html, Html) Build a dialog element without any attributes. Declaration public static Html dialog_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element dialog_(Html[]) Build a dialog element without any attributes. Declaration public static Html dialog_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element dialog_(IEnumerable<Html>) Build a dialog element without any attributes. Declaration public static Html dialog_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element dialog_(List<Html>) Build a dialog element without any attributes. Declaration public static Html dialog_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element dialog_(ImmutableArray<Html>) Build a dialog element without any attributes. Declaration public static Html dialog_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element dialog_(ImmutableList<Html>) Build a dialog element without any attributes. Declaration public static Html dialog_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element div(Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr, Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a div element. Declaration public static TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(Attr[]) Build a div element. Declaration public static TagBuilder div(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(IEnumerable<Attr>) Build a div element. Declaration public static TagBuilder div(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children div(String, String, String, String, String, String) Build a div element. Declaration public static TagBuilder div(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children div_(Html) Build a div element without any attributes. Declaration public static Html div_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element div_(Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element div_(Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element div_(Html, Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element div_(Html, Html, Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element div_(Html, Html, Html, Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element div_(Html, Html, Html, Html, Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element div_(Html, Html, Html, Html, Html, Html, Html, Html) Build a div element without any attributes. Declaration public static Html div_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element div_(Html[]) Build a div element without any attributes. Declaration public static Html div_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element div_(IEnumerable<Html>) Build a div element without any attributes. Declaration public static Html div_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element div_(List<Html>) Build a div element without any attributes. Declaration public static Html div_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element div_(ImmutableArray<Html>) Build a div element without any attributes. Declaration public static Html div_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element div_(ImmutableList<Html>) Build a div element without any attributes. Declaration public static Html div_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element dl(Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr, Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dl element. Declaration public static TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(Attr[]) Build a dl element. Declaration public static TagBuilder dl(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(IEnumerable<Attr>) Build a dl element. Declaration public static TagBuilder dl(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl(String, String, String, String, String, String) Build a dl element. Declaration public static TagBuilder dl(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children dl_(Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element dl_(Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element dl_(Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element dl_(Html, Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element dl_(Html, Html, Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element dl_(Html, Html, Html, Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element dl_(Html, Html, Html, Html, Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element dl_(Html, Html, Html, Html, Html, Html, Html, Html) Build a dl element without any attributes. Declaration public static Html dl_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element dl_(Html[]) Build a dl element without any attributes. Declaration public static Html dl_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element dl_(IEnumerable<Html>) Build a dl element without any attributes. Declaration public static Html dl_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element dl_(List<Html>) Build a dl element without any attributes. Declaration public static Html dl_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element dl_(ImmutableArray<Html>) Build a dl element without any attributes. Declaration public static Html dl_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element dl_(ImmutableList<Html>) Build a dl element without any attributes. Declaration public static Html dl_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element doctype() Write the <!DOCTYPE HTML> preamble. Declaration public static Html doctype() Returns Type Description Html An instance of Html . doctypeHtml_(Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html, Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html, Html, Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html An instance of Html . doctypeHtml_(Html, Html, Html, Html, Html, Html, Html, Html) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html An instance of Html . doctypeHtml_(Html[]) Write the <!DOCTYPE HTML> preamble and create an html tag with children. Declaration public static Html doctypeHtml_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html An instance of Html . dt(Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr, Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a dt element. Declaration public static TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(Attr[]) Build a dt element. Declaration public static TagBuilder dt(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(IEnumerable<Attr>) Build a dt element. Declaration public static TagBuilder dt(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt(String, String, String, String, String, String) Build a dt element. Declaration public static TagBuilder dt(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children dt_(Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element dt_(Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element dt_(Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element dt_(Html, Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element dt_(Html, Html, Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element dt_(Html, Html, Html, Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element dt_(Html, Html, Html, Html, Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element dt_(Html, Html, Html, Html, Html, Html, Html, Html) Build a dt element without any attributes. Declaration public static Html dt_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element dt_(Html[]) Build a dt element without any attributes. Declaration public static Html dt_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element dt_(IEnumerable<Html>) Build a dt element without any attributes. Declaration public static Html dt_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element dt_(List<Html>) Build a dt element without any attributes. Declaration public static Html dt_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element dt_(ImmutableArray<Html>) Build a dt element without any attributes. Declaration public static Html dt_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element dt_(ImmutableList<Html>) Build a dt element without any attributes. Declaration public static Html dt_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element em(Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr, Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an em element. Declaration public static TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(Attr[]) Build an em element. Declaration public static TagBuilder em(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(IEnumerable<Attr>) Build an em element. Declaration public static TagBuilder em(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children em(String, String, String, String, String, String) Build an em element. Declaration public static TagBuilder em(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children em_(Html) Build an em element without any attributes. Declaration public static Html em_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element em_(Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element em_(Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element em_(Html, Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element em_(Html, Html, Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element em_(Html, Html, Html, Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element em_(Html, Html, Html, Html, Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element em_(Html, Html, Html, Html, Html, Html, Html, Html) Build an em element without any attributes. Declaration public static Html em_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element em_(Html[]) Build an em element without any attributes. Declaration public static Html em_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element em_(IEnumerable<Html>) Build an em element without any attributes. Declaration public static Html em_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element em_(List<Html>) Build an em element without any attributes. Declaration public static Html em_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element em_(ImmutableArray<Html>) Build an em element without any attributes. Declaration public static Html em_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element em_(ImmutableList<Html>) Build an em element without any attributes. Declaration public static Html em_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element embed(Attr) Build an embed element. Declaration public static Html embed(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element embed(Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element embed(Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element embed(Attr, Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element embed(Attr, Attr, Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element embed(Attr, Attr, Attr, Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element embed(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element embed(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an embed element. Declaration public static Html embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element embed(Attr[]) Build an embed element. Declaration public static Html embed(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element embed(IEnumerable<Attr>) Build an embed element. Declaration public static Html embed(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element embed(String, String, String, String, String, String, String, String, String, String) Build an embed element. Declaration public static Html embed(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null, string height = null, string width = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src String height String width Returns Type Description Html The element fieldset(Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr, Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a fieldset element. Declaration public static TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(Attr[]) Build a fieldset element. Declaration public static TagBuilder fieldset(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(IEnumerable<Attr>) Build a fieldset element. Declaration public static TagBuilder fieldset(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset(String, String, String, String, String, String, String, Boolean, String) Build a fieldset element. Declaration public static TagBuilder fieldset(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, bool disabled = false, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name Boolean disabled String form Returns Type Description TagBuilder A TagBuilder waiting for the element's children fieldset_(Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element fieldset_(Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element fieldset_(Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element fieldset_(Html, Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element fieldset_(Html, Html, Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element fieldset_(Html, Html, Html, Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element fieldset_(Html, Html, Html, Html, Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element fieldset_(Html, Html, Html, Html, Html, Html, Html, Html) Build a fieldset element without any attributes. Declaration public static Html fieldset_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element fieldset_(Html[]) Build a fieldset element without any attributes. Declaration public static Html fieldset_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element fieldset_(IEnumerable<Html>) Build a fieldset element without any attributes. Declaration public static Html fieldset_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element fieldset_(List<Html>) Build a fieldset element without any attributes. Declaration public static Html fieldset_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element fieldset_(ImmutableArray<Html>) Build a fieldset element without any attributes. Declaration public static Html fieldset_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element fieldset_(ImmutableList<Html>) Build a fieldset element without any attributes. Declaration public static Html fieldset_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element figcaption(Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr, Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a figcaption element. Declaration public static TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(Attr[]) Build a figcaption element. Declaration public static TagBuilder figcaption(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(IEnumerable<Attr>) Build a figcaption element. Declaration public static TagBuilder figcaption(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption(String, String, String, String, String, String) Build a figcaption element. Declaration public static TagBuilder figcaption(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children figcaption_(Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element figcaption_(Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element figcaption_(Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element figcaption_(Html, Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element figcaption_(Html, Html, Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element figcaption_(Html, Html, Html, Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element figcaption_(Html, Html, Html, Html, Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element figcaption_(Html, Html, Html, Html, Html, Html, Html, Html) Build a figcaption element without any attributes. Declaration public static Html figcaption_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element figcaption_(Html[]) Build a figcaption element without any attributes. Declaration public static Html figcaption_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element figcaption_(IEnumerable<Html>) Build a figcaption element without any attributes. Declaration public static Html figcaption_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element figcaption_(List<Html>) Build a figcaption element without any attributes. Declaration public static Html figcaption_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element figcaption_(ImmutableArray<Html>) Build a figcaption element without any attributes. Declaration public static Html figcaption_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element figcaption_(ImmutableList<Html>) Build a figcaption element without any attributes. Declaration public static Html figcaption_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element figure(Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr, Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a figure element. Declaration public static TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(Attr[]) Build a figure element. Declaration public static TagBuilder figure(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(IEnumerable<Attr>) Build a figure element. Declaration public static TagBuilder figure(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure(String, String, String, String, String, String) Build a figure element. Declaration public static TagBuilder figure(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children figure_(Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element figure_(Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element figure_(Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element figure_(Html, Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element figure_(Html, Html, Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element figure_(Html, Html, Html, Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element figure_(Html, Html, Html, Html, Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element figure_(Html, Html, Html, Html, Html, Html, Html, Html) Build a figure element without any attributes. Declaration public static Html figure_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element figure_(Html[]) Build a figure element without any attributes. Declaration public static Html figure_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element figure_(IEnumerable<Html>) Build a figure element without any attributes. Declaration public static Html figure_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element figure_(List<Html>) Build a figure element without any attributes. Declaration public static Html figure_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element figure_(ImmutableArray<Html>) Build a figure element without any attributes. Declaration public static Html figure_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element figure_(ImmutableList<Html>) Build a figure element without any attributes. Declaration public static Html figure_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element footer(Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr, Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a footer element. Declaration public static TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(Attr[]) Build a footer element. Declaration public static TagBuilder footer(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(IEnumerable<Attr>) Build a footer element. Declaration public static TagBuilder footer(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer(String, String, String, String, String, String) Build a footer element. Declaration public static TagBuilder footer(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children footer_(Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element footer_(Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element footer_(Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element footer_(Html, Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element footer_(Html, Html, Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element footer_(Html, Html, Html, Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element footer_(Html, Html, Html, Html, Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element footer_(Html, Html, Html, Html, Html, Html, Html, Html) Build a footer element without any attributes. Declaration public static Html footer_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element footer_(Html[]) Build a footer element without any attributes. Declaration public static Html footer_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element footer_(IEnumerable<Html>) Build a footer element without any attributes. Declaration public static Html footer_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element footer_(List<Html>) Build a footer element without any attributes. Declaration public static Html footer_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element footer_(ImmutableArray<Html>) Build a footer element without any attributes. Declaration public static Html footer_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element footer_(ImmutableList<Html>) Build a footer element without any attributes. Declaration public static Html footer_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element form(Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr, Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a form element. Declaration public static TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(Attr[]) Build a form element. Declaration public static TagBuilder form(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(IEnumerable<Attr>) Build a form element. Declaration public static TagBuilder form(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children form(String, String, String, String, String, String, String, String, String, String, String, String, Boolean) Build a form element. Declaration public static TagBuilder form(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string action = null, string method = null, string autocomplete = null, string target = null, string enctype = null, bool novalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String action String method String autocomplete String target String enctype Boolean novalidate Returns Type Description TagBuilder A TagBuilder waiting for the element's children form_(Html) Build a form element without any attributes. Declaration public static Html form_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element form_(Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element form_(Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element form_(Html, Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element form_(Html, Html, Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element form_(Html, Html, Html, Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element form_(Html, Html, Html, Html, Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element form_(Html, Html, Html, Html, Html, Html, Html, Html) Build a form element without any attributes. Declaration public static Html form_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element form_(Html[]) Build a form element without any attributes. Declaration public static Html form_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element form_(IEnumerable<Html>) Build a form element without any attributes. Declaration public static Html form_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element form_(List<Html>) Build a form element without any attributes. Declaration public static Html form_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element form_(ImmutableArray<Html>) Build a form element without any attributes. Declaration public static Html form_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element form_(ImmutableList<Html>) Build a form element without any attributes. Declaration public static Html form_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element FromHtmlArray(Html[]) Put some siblings next to each other. Declaration public static Html FromHtmlArray(Html[] siblings) Parameters Type Name Description Html [] siblings Returns Type Description Html FromImmutableArray(ImmutableArray<Html>) Put some siblings next to each other. Declaration public static Html FromImmutableArray(ImmutableArray<Html> siblings) Parameters Type Name Description ImmutableArray < Html > siblings Returns Type Description Html FromImmutableList(ImmutableList<Html>) Put some siblings next to each other. Declaration public static Html FromImmutableList(ImmutableList<Html> siblings) Parameters Type Name Description ImmutableList < Html > siblings Returns Type Description Html FromList(List<Html>) Put some siblings next to each other. Declaration public static Html FromList(List<Html> siblings) Parameters Type Name Description List < Html > siblings Returns Type Description Html FromString(String) Render HTML-encoded text. Declaration public static Html FromString(string text) Parameters Type Name Description String text The text to HTML-encode Returns Type Description Html An instance of Html . FromTagBuilder(TagBuilder) Create a tag with no children. Declaration public static Html FromTagBuilder(TagBuilder tagBuilder) Parameters Type Name Description TagBuilder tagBuilder Returns Type Description Html h1(Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr, Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h1 element. Declaration public static TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(Attr[]) Build an h1 element. Declaration public static TagBuilder h1(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(IEnumerable<Attr>) Build an h1 element. Declaration public static TagBuilder h1(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1(String, String, String, String, String, String) Build an h1 element. Declaration public static TagBuilder h1(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h1_(Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h1_(Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h1_(Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h1_(Html, Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h1_(Html, Html, Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h1_(Html, Html, Html, Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h1_(Html, Html, Html, Html, Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h1_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h1 element without any attributes. Declaration public static Html h1_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h1_(Html[]) Build an h1 element without any attributes. Declaration public static Html h1_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h1_(IEnumerable<Html>) Build an h1 element without any attributes. Declaration public static Html h1_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h1_(List<Html>) Build an h1 element without any attributes. Declaration public static Html h1_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h1_(ImmutableArray<Html>) Build an h1 element without any attributes. Declaration public static Html h1_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h1_(ImmutableList<Html>) Build an h1 element without any attributes. Declaration public static Html h1_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element h2(Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr, Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h2 element. Declaration public static TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(Attr[]) Build an h2 element. Declaration public static TagBuilder h2(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(IEnumerable<Attr>) Build an h2 element. Declaration public static TagBuilder h2(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2(String, String, String, String, String, String) Build an h2 element. Declaration public static TagBuilder h2(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h2_(Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h2_(Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h2_(Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h2_(Html, Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h2_(Html, Html, Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h2_(Html, Html, Html, Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h2_(Html, Html, Html, Html, Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h2_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h2 element without any attributes. Declaration public static Html h2_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h2_(Html[]) Build an h2 element without any attributes. Declaration public static Html h2_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h2_(IEnumerable<Html>) Build an h2 element without any attributes. Declaration public static Html h2_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h2_(List<Html>) Build an h2 element without any attributes. Declaration public static Html h2_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h2_(ImmutableArray<Html>) Build an h2 element without any attributes. Declaration public static Html h2_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h2_(ImmutableList<Html>) Build an h2 element without any attributes. Declaration public static Html h2_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element h3(Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr, Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h3 element. Declaration public static TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(Attr[]) Build an h3 element. Declaration public static TagBuilder h3(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(IEnumerable<Attr>) Build an h3 element. Declaration public static TagBuilder h3(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3(String, String, String, String, String, String) Build an h3 element. Declaration public static TagBuilder h3(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h3_(Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h3_(Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h3_(Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h3_(Html, Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h3_(Html, Html, Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h3_(Html, Html, Html, Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h3_(Html, Html, Html, Html, Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h3_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h3 element without any attributes. Declaration public static Html h3_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h3_(Html[]) Build an h3 element without any attributes. Declaration public static Html h3_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h3_(IEnumerable<Html>) Build an h3 element without any attributes. Declaration public static Html h3_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h3_(List<Html>) Build an h3 element without any attributes. Declaration public static Html h3_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h3_(ImmutableArray<Html>) Build an h3 element without any attributes. Declaration public static Html h3_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h3_(ImmutableList<Html>) Build an h3 element without any attributes. Declaration public static Html h3_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element h4(Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr, Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h4 element. Declaration public static TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(Attr[]) Build an h4 element. Declaration public static TagBuilder h4(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(IEnumerable<Attr>) Build an h4 element. Declaration public static TagBuilder h4(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4(String, String, String, String, String, String) Build an h4 element. Declaration public static TagBuilder h4(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h4_(Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h4_(Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h4_(Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h4_(Html, Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h4_(Html, Html, Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h4_(Html, Html, Html, Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h4_(Html, Html, Html, Html, Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h4_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h4 element without any attributes. Declaration public static Html h4_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h4_(Html[]) Build an h4 element without any attributes. Declaration public static Html h4_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h4_(IEnumerable<Html>) Build an h4 element without any attributes. Declaration public static Html h4_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h4_(List<Html>) Build an h4 element without any attributes. Declaration public static Html h4_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h4_(ImmutableArray<Html>) Build an h4 element without any attributes. Declaration public static Html h4_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h4_(ImmutableList<Html>) Build an h4 element without any attributes. Declaration public static Html h4_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element h5(Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr, Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h5 element. Declaration public static TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(Attr[]) Build an h5 element. Declaration public static TagBuilder h5(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(IEnumerable<Attr>) Build an h5 element. Declaration public static TagBuilder h5(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5(String, String, String, String, String, String) Build an h5 element. Declaration public static TagBuilder h5(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h5_(Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h5_(Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h5_(Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h5_(Html, Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h5_(Html, Html, Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h5_(Html, Html, Html, Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h5_(Html, Html, Html, Html, Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h5_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h5 element without any attributes. Declaration public static Html h5_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h5_(Html[]) Build an h5 element without any attributes. Declaration public static Html h5_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h5_(IEnumerable<Html>) Build an h5 element without any attributes. Declaration public static Html h5_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h5_(List<Html>) Build an h5 element without any attributes. Declaration public static Html h5_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h5_(ImmutableArray<Html>) Build an h5 element without any attributes. Declaration public static Html h5_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h5_(ImmutableList<Html>) Build an h5 element without any attributes. Declaration public static Html h5_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element h6(Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr, Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an h6 element. Declaration public static TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(Attr[]) Build an h6 element. Declaration public static TagBuilder h6(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(IEnumerable<Attr>) Build an h6 element. Declaration public static TagBuilder h6(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6(String, String, String, String, String, String) Build an h6 element. Declaration public static TagBuilder h6(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children h6_(Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element h6_(Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element h6_(Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element h6_(Html, Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element h6_(Html, Html, Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element h6_(Html, Html, Html, Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element h6_(Html, Html, Html, Html, Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element h6_(Html, Html, Html, Html, Html, Html, Html, Html) Build an h6 element without any attributes. Declaration public static Html h6_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element h6_(Html[]) Build an h6 element without any attributes. Declaration public static Html h6_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element h6_(IEnumerable<Html>) Build an h6 element without any attributes. Declaration public static Html h6_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element h6_(List<Html>) Build an h6 element without any attributes. Declaration public static Html h6_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element h6_(ImmutableArray<Html>) Build an h6 element without any attributes. Declaration public static Html h6_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element h6_(ImmutableList<Html>) Build an h6 element without any attributes. Declaration public static Html h6_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element head(Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr, Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a head element. Declaration public static TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(Attr[]) Build a head element. Declaration public static TagBuilder head(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(IEnumerable<Attr>) Build a head element. Declaration public static TagBuilder head(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children head(String, String, String, String, String, String) Build a head element. Declaration public static TagBuilder head(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children head_(Html) Build a head element without any attributes. Declaration public static Html head_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element head_(Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element head_(Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element head_(Html, Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element head_(Html, Html, Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element head_(Html, Html, Html, Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element head_(Html, Html, Html, Html, Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element head_(Html, Html, Html, Html, Html, Html, Html, Html) Build a head element without any attributes. Declaration public static Html head_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element head_(Html[]) Build a head element without any attributes. Declaration public static Html head_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element head_(IEnumerable<Html>) Build a head element without any attributes. Declaration public static Html head_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element head_(List<Html>) Build a head element without any attributes. Declaration public static Html head_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element head_(ImmutableArray<Html>) Build a head element without any attributes. Declaration public static Html head_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element head_(ImmutableList<Html>) Build a head element without any attributes. Declaration public static Html head_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element header(Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr, Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a header element. Declaration public static TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(Attr[]) Build a header element. Declaration public static TagBuilder header(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(IEnumerable<Attr>) Build a header element. Declaration public static TagBuilder header(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children header(String, String, String, String, String, String) Build a header element. Declaration public static TagBuilder header(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children header_(Html) Build a header element without any attributes. Declaration public static Html header_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element header_(Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element header_(Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element header_(Html, Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element header_(Html, Html, Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element header_(Html, Html, Html, Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element header_(Html, Html, Html, Html, Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element header_(Html, Html, Html, Html, Html, Html, Html, Html) Build a header element without any attributes. Declaration public static Html header_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element header_(Html[]) Build a header element without any attributes. Declaration public static Html header_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element header_(IEnumerable<Html>) Build a header element without any attributes. Declaration public static Html header_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element header_(List<Html>) Build a header element without any attributes. Declaration public static Html header_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element header_(ImmutableArray<Html>) Build a header element without any attributes. Declaration public static Html header_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element header_(ImmutableList<Html>) Build a header element without any attributes. Declaration public static Html header_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element hgroup(Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr, Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a hgroup element. Declaration public static TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(Attr[]) Build a hgroup element. Declaration public static TagBuilder hgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(IEnumerable<Attr>) Build a hgroup element. Declaration public static TagBuilder hgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup(String, String, String, String, String, String) Build a hgroup element. Declaration public static TagBuilder hgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children hgroup_(Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element hgroup_(Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element hgroup_(Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element hgroup_(Html, Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element hgroup_(Html, Html, Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element hgroup_(Html, Html, Html, Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element hgroup_(Html, Html, Html, Html, Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element hgroup_(Html, Html, Html, Html, Html, Html, Html, Html) Build a hgroup element without any attributes. Declaration public static Html hgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element hgroup_(Html[]) Build a hgroup element without any attributes. Declaration public static Html hgroup_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element hgroup_(IEnumerable<Html>) Build a hgroup element without any attributes. Declaration public static Html hgroup_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element hgroup_(List<Html>) Build a hgroup element without any attributes. Declaration public static Html hgroup_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element hgroup_(ImmutableArray<Html>) Build a hgroup element without any attributes. Declaration public static Html hgroup_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element hgroup_(ImmutableList<Html>) Build a hgroup element without any attributes. Declaration public static Html hgroup_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element hr(Attr) Build an hr element. Declaration public static Html hr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element hr(Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element hr(Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element hr(Attr, Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element hr(Attr, Attr, Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element hr(Attr, Attr, Attr, Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element hr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element hr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an hr element. Declaration public static Html hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element hr(Attr[]) Build an hr element. Declaration public static Html hr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element hr(IEnumerable<Attr>) Build an hr element. Declaration public static Html hr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element hr(String, String, String, String, String, String) Build an hr element. Declaration public static Html hr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description Html The element html(Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr, Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an html element. Declaration public static TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(Attr[]) Build an html element. Declaration public static TagBuilder html(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(IEnumerable<Attr>) Build an html element. Declaration public static TagBuilder html(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children html(String, String, String, String, String, String, String) Build an html element. Declaration public static TagBuilder html(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string xmlns = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String xmlns Returns Type Description TagBuilder A TagBuilder waiting for the element's children html_(Html) Build an html element without any attributes. Declaration public static Html html_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element html_(Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element html_(Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element html_(Html, Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element html_(Html, Html, Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element html_(Html, Html, Html, Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element html_(Html, Html, Html, Html, Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element html_(Html, Html, Html, Html, Html, Html, Html, Html) Build an html element without any attributes. Declaration public static Html html_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element html_(Html[]) Build an html element without any attributes. Declaration public static Html html_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element html_(IEnumerable<Html>) Build an html element without any attributes. Declaration public static Html html_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element html_(List<Html>) Build an html element without any attributes. Declaration public static Html html_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element html_(ImmutableArray<Html>) Build an html element without any attributes. Declaration public static Html html_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element html_(ImmutableList<Html>) Build an html element without any attributes. Declaration public static Html html_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element i(Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr, Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an i element. Declaration public static TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(Attr[]) Build an i element. Declaration public static TagBuilder i(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(IEnumerable<Attr>) Build an i element. Declaration public static TagBuilder i(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children i(String, String, String, String, String, String) Build an i element. Declaration public static TagBuilder i(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children i_(Html) Build an i element without any attributes. Declaration public static Html i_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element i_(Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element i_(Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element i_(Html, Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element i_(Html, Html, Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element i_(Html, Html, Html, Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element i_(Html, Html, Html, Html, Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element i_(Html, Html, Html, Html, Html, Html, Html, Html) Build an i element without any attributes. Declaration public static Html i_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element i_(Html[]) Build an i element without any attributes. Declaration public static Html i_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element i_(IEnumerable<Html>) Build an i element without any attributes. Declaration public static Html i_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element i_(List<Html>) Build an i element without any attributes. Declaration public static Html i_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element i_(ImmutableArray<Html>) Build an i element without any attributes. Declaration public static Html i_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element i_(ImmutableList<Html>) Build an i element without any attributes. Declaration public static Html i_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element img(Attr) Build an img element. Declaration public static Html img(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element img(Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element img(Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element img(Attr, Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element img(Attr, Attr, Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element img(Attr, Attr, Attr, Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element img(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element img(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an img element. Declaration public static Html img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element img(Attr[]) Build an img element. Declaration public static Html img(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element img(IEnumerable<Attr>) Build an img element. Declaration public static Html img(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element img(String, String, String, String, String, String, String, String, String, String, String, String, String) Build an img element. Declaration public static Html img(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string alt = null, string height = null, string width = null, string srcset = null, string sizes = null, string crossorigin = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String alt String height String width String srcset String sizes String crossorigin Returns Type Description Html The element input(Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr, Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an input element. Declaration public static TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(Attr[]) Build an input element. Declaration public static TagBuilder input(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(IEnumerable<Attr>) Build an input element. Declaration public static TagBuilder input(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children input(String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean) Build an input element. Declaration public static TagBuilder input(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string type = null, string multiple = null, string value = null, string placeholder = null, string size = null, string autocomplete = null, string list = null, bool autofocus = false, bool checked = false, bool disabled = false, bool readonly = false, bool required = false, string src = null, string height = null, string width = null, string max = null, string min = null, string step = null, string maxlength = null, string minlength = null, string pattern = null, string form = null, string formaction = null, string formmethod = null, string formtarget = null, string formenctype = null, bool formnovalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String type String multiple String value String placeholder String size String autocomplete String list Boolean autofocus Boolean checked Boolean disabled Boolean readonly Boolean required String src String height String width String max String min String step String maxlength String minlength String pattern String form String formaction String formmethod String formtarget String formenctype Boolean formnovalidate Returns Type Description TagBuilder A TagBuilder waiting for the element's children input_(Html) Build an input element without any attributes. Declaration public static Html input_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element input_(Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element input_(Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element input_(Html, Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element input_(Html, Html, Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element input_(Html, Html, Html, Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element input_(Html, Html, Html, Html, Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element input_(Html, Html, Html, Html, Html, Html, Html, Html) Build an input element without any attributes. Declaration public static Html input_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element input_(Html[]) Build an input element without any attributes. Declaration public static Html input_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element input_(IEnumerable<Html>) Build an input element without any attributes. Declaration public static Html input_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element input_(List<Html>) Build an input element without any attributes. Declaration public static Html input_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element input_(ImmutableArray<Html>) Build an input element without any attributes. Declaration public static Html input_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element input_(ImmutableList<Html>) Build an input element without any attributes. Declaration public static Html input_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element kbd(Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr, Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a kbd element. Declaration public static TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(Attr[]) Build a kbd element. Declaration public static TagBuilder kbd(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(IEnumerable<Attr>) Build a kbd element. Declaration public static TagBuilder kbd(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd(String, String, String, String, String, String) Build a kbd element. Declaration public static TagBuilder kbd(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children kbd_(Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element kbd_(Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element kbd_(Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element kbd_(Html, Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element kbd_(Html, Html, Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element kbd_(Html, Html, Html, Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element kbd_(Html, Html, Html, Html, Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element kbd_(Html, Html, Html, Html, Html, Html, Html, Html) Build a kbd element without any attributes. Declaration public static Html kbd_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element kbd_(Html[]) Build a kbd element without any attributes. Declaration public static Html kbd_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element kbd_(IEnumerable<Html>) Build a kbd element without any attributes. Declaration public static Html kbd_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element kbd_(List<Html>) Build a kbd element without any attributes. Declaration public static Html kbd_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element kbd_(ImmutableArray<Html>) Build a kbd element without any attributes. Declaration public static Html kbd_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element kbd_(ImmutableList<Html>) Build a kbd element without any attributes. Declaration public static Html kbd_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element label(Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr, Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a label element. Declaration public static TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(Attr[]) Build a label element. Declaration public static TagBuilder label(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(IEnumerable<Attr>) Build a label element. Declaration public static TagBuilder label(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children label(String, String, String, String, String, String, String) Build a label element. Declaration public static TagBuilder label(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string for = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String for Returns Type Description TagBuilder A TagBuilder waiting for the element's children label_(Html) Build a label element without any attributes. Declaration public static Html label_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element label_(Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element label_(Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element label_(Html, Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element label_(Html, Html, Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element label_(Html, Html, Html, Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element label_(Html, Html, Html, Html, Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element label_(Html, Html, Html, Html, Html, Html, Html, Html) Build a label element without any attributes. Declaration public static Html label_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element label_(Html[]) Build a label element without any attributes. Declaration public static Html label_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element label_(IEnumerable<Html>) Build a label element without any attributes. Declaration public static Html label_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element label_(List<Html>) Build a label element without any attributes. Declaration public static Html label_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element label_(ImmutableArray<Html>) Build a label element without any attributes. Declaration public static Html label_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element label_(ImmutableList<Html>) Build a label element without any attributes. Declaration public static Html label_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element legend(Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr, Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a legend element. Declaration public static TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(Attr[]) Build a legend element. Declaration public static TagBuilder legend(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(IEnumerable<Attr>) Build a legend element. Declaration public static TagBuilder legend(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend(String, String, String, String, String, String) Build a legend element. Declaration public static TagBuilder legend(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children legend_(Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element legend_(Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element legend_(Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element legend_(Html, Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element legend_(Html, Html, Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element legend_(Html, Html, Html, Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element legend_(Html, Html, Html, Html, Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element legend_(Html, Html, Html, Html, Html, Html, Html, Html) Build a legend element without any attributes. Declaration public static Html legend_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element legend_(Html[]) Build a legend element without any attributes. Declaration public static Html legend_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element legend_(IEnumerable<Html>) Build a legend element without any attributes. Declaration public static Html legend_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element legend_(List<Html>) Build a legend element without any attributes. Declaration public static Html legend_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element legend_(ImmutableArray<Html>) Build a legend element without any attributes. Declaration public static Html legend_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element legend_(ImmutableList<Html>) Build a legend element without any attributes. Declaration public static Html legend_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element li(Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr, Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an li element. Declaration public static TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(Attr[]) Build an li element. Declaration public static TagBuilder li(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(IEnumerable<Attr>) Build an li element. Declaration public static TagBuilder li(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children li(String, String, String, String, String, String, String) Build an li element. Declaration public static TagBuilder li(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value Returns Type Description TagBuilder A TagBuilder waiting for the element's children li_(Html) Build an li element without any attributes. Declaration public static Html li_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element li_(Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element li_(Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element li_(Html, Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element li_(Html, Html, Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element li_(Html, Html, Html, Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element li_(Html, Html, Html, Html, Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element li_(Html, Html, Html, Html, Html, Html, Html, Html) Build an li element without any attributes. Declaration public static Html li_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element li_(Html[]) Build an li element without any attributes. Declaration public static Html li_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element li_(IEnumerable<Html>) Build an li element without any attributes. Declaration public static Html li_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element li_(List<Html>) Build an li element without any attributes. Declaration public static Html li_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element li_(ImmutableArray<Html>) Build an li element without any attributes. Declaration public static Html li_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element li_(ImmutableList<Html>) Build an li element without any attributes. Declaration public static Html li_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element link(Attr) Build a link element. Declaration public static Html link(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element link(Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element link(Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element link(Attr, Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element link(Attr, Attr, Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element link(Attr, Attr, Attr, Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element link(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element link(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a link element. Declaration public static Html link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element link(Attr[]) Build a link element. Declaration public static Html link(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element link(IEnumerable<Attr>) Build a link element. Declaration public static Html link(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element link(String, String, String, String, String, String, String, String, String, String, String, String) Build a link element. Declaration public static Html link(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string crossorigin = null, string rel = null, string href = null, string type = null, string media = null, string sizes = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String crossorigin String rel String href String type String media String sizes Returns Type Description Html The element main(Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr, Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a main element. Declaration public static TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(Attr[]) Build a main element. Declaration public static TagBuilder main(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(IEnumerable<Attr>) Build a main element. Declaration public static TagBuilder main(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children main(String, String, String, String, String, String) Build a main element. Declaration public static TagBuilder main(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children main_(Html) Build a main element without any attributes. Declaration public static Html main_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element main_(Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element main_(Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element main_(Html, Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element main_(Html, Html, Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element main_(Html, Html, Html, Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element main_(Html, Html, Html, Html, Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element main_(Html, Html, Html, Html, Html, Html, Html, Html) Build a main element without any attributes. Declaration public static Html main_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element main_(Html[]) Build a main element without any attributes. Declaration public static Html main_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element main_(IEnumerable<Html>) Build a main element without any attributes. Declaration public static Html main_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element main_(List<Html>) Build a main element without any attributes. Declaration public static Html main_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element main_(ImmutableArray<Html>) Build a main element without any attributes. Declaration public static Html main_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element main_(ImmutableList<Html>) Build a main element without any attributes. Declaration public static Html main_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element mark(Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr, Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a mark element. Declaration public static TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(Attr[]) Build a mark element. Declaration public static TagBuilder mark(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(IEnumerable<Attr>) Build a mark element. Declaration public static TagBuilder mark(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark(String, String, String, String, String, String) Build a mark element. Declaration public static TagBuilder mark(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children mark_(Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element mark_(Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element mark_(Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element mark_(Html, Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element mark_(Html, Html, Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element mark_(Html, Html, Html, Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element mark_(Html, Html, Html, Html, Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element mark_(Html, Html, Html, Html, Html, Html, Html, Html) Build a mark element without any attributes. Declaration public static Html mark_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element mark_(Html[]) Build a mark element without any attributes. Declaration public static Html mark_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element mark_(IEnumerable<Html>) Build a mark element without any attributes. Declaration public static Html mark_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element mark_(List<Html>) Build a mark element without any attributes. Declaration public static Html mark_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element mark_(ImmutableArray<Html>) Build a mark element without any attributes. Declaration public static Html mark_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element mark_(ImmutableList<Html>) Build a mark element without any attributes. Declaration public static Html mark_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element menu(Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr, Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a menu element. Declaration public static TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(Attr[]) Build a menu element. Declaration public static TagBuilder menu(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(IEnumerable<Attr>) Build a menu element. Declaration public static TagBuilder menu(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu(String, String, String, String, String, String, String, String) Build a menu element. Declaration public static TagBuilder menu(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string label = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String label Returns Type Description TagBuilder A TagBuilder waiting for the element's children menu_(Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element menu_(Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element menu_(Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element menu_(Html, Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element menu_(Html, Html, Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element menu_(Html, Html, Html, Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element menu_(Html, Html, Html, Html, Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element menu_(Html, Html, Html, Html, Html, Html, Html, Html) Build a menu element without any attributes. Declaration public static Html menu_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element menu_(Html[]) Build a menu element without any attributes. Declaration public static Html menu_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element menu_(IEnumerable<Html>) Build a menu element without any attributes. Declaration public static Html menu_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element menu_(List<Html>) Build a menu element without any attributes. Declaration public static Html menu_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element menu_(ImmutableArray<Html>) Build a menu element without any attributes. Declaration public static Html menu_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element menu_(ImmutableList<Html>) Build a menu element without any attributes. Declaration public static Html menu_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element menuitem(Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr, Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a menuitem element. Declaration public static TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(Attr[]) Build a menuitem element. Declaration public static TagBuilder menuitem(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(IEnumerable<Attr>) Build a menuitem element. Declaration public static TagBuilder menuitem(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem(String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean) Build a menuitem element. Declaration public static TagBuilder menuitem(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string label = null, string command = null, string icon = null, string radiogroup = null, bool disabled = false, bool default = false, bool checked = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String label String command String icon String radiogroup Boolean disabled Boolean default Boolean checked Returns Type Description TagBuilder A TagBuilder waiting for the element's children menuitem_(Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element menuitem_(Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element menuitem_(Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element menuitem_(Html, Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element menuitem_(Html, Html, Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element menuitem_(Html, Html, Html, Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element menuitem_(Html, Html, Html, Html, Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element menuitem_(Html, Html, Html, Html, Html, Html, Html, Html) Build a menuitem element without any attributes. Declaration public static Html menuitem_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element menuitem_(Html[]) Build a menuitem element without any attributes. Declaration public static Html menuitem_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element menuitem_(IEnumerable<Html>) Build a menuitem element without any attributes. Declaration public static Html menuitem_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element menuitem_(List<Html>) Build a menuitem element without any attributes. Declaration public static Html menuitem_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element menuitem_(ImmutableArray<Html>) Build a menuitem element without any attributes. Declaration public static Html menuitem_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element menuitem_(ImmutableList<Html>) Build a menuitem element without any attributes. Declaration public static Html menuitem_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element meta(Attr) Build a meta element. Declaration public static Html meta(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element meta(Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element meta(Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element meta(Attr, Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element meta(Attr, Attr, Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element meta(Attr, Attr, Attr, Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element meta(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element meta(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a meta element. Declaration public static Html meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element meta(Attr[]) Build a meta element. Declaration public static Html meta(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element meta(IEnumerable<Attr>) Build a meta element. Declaration public static Html meta(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element meta(String, String, String, String, String, String, String, String) Build a meta element. Declaration public static Html meta(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string charset = null, string target = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String charset String target Returns Type Description Html The element meter(Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr, Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a meter element. Declaration public static TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(Attr[]) Build a meter element. Declaration public static TagBuilder meter(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(IEnumerable<Attr>) Build a meter element. Declaration public static TagBuilder meter(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter(String, String, String, String, String, String, String, String, String, String, String, String, String) Build a meter element. Declaration public static TagBuilder meter(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null, string form = null, string max = null, string min = null, string low = null, string high = null, string optimum = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value String form String max String min String low String high String optimum Returns Type Description TagBuilder A TagBuilder waiting for the element's children meter_(Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element meter_(Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element meter_(Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element meter_(Html, Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element meter_(Html, Html, Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element meter_(Html, Html, Html, Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element meter_(Html, Html, Html, Html, Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element meter_(Html, Html, Html, Html, Html, Html, Html, Html) Build a meter element without any attributes. Declaration public static Html meter_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element meter_(Html[]) Build a meter element without any attributes. Declaration public static Html meter_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element meter_(IEnumerable<Html>) Build a meter element without any attributes. Declaration public static Html meter_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element meter_(List<Html>) Build a meter element without any attributes. Declaration public static Html meter_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element meter_(ImmutableArray<Html>) Build a meter element without any attributes. Declaration public static Html meter_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element meter_(ImmutableList<Html>) Build a meter element without any attributes. Declaration public static Html meter_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element nav(Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr, Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a nav element. Declaration public static TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(Attr[]) Build a nav element. Declaration public static TagBuilder nav(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(IEnumerable<Attr>) Build a nav element. Declaration public static TagBuilder nav(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav(String, String, String, String, String, String) Build a nav element. Declaration public static TagBuilder nav(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children nav_(Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element nav_(Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element nav_(Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element nav_(Html, Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element nav_(Html, Html, Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element nav_(Html, Html, Html, Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element nav_(Html, Html, Html, Html, Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element nav_(Html, Html, Html, Html, Html, Html, Html, Html) Build a nav element without any attributes. Declaration public static Html nav_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element nav_(Html[]) Build a nav element without any attributes. Declaration public static Html nav_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element nav_(IEnumerable<Html>) Build a nav element without any attributes. Declaration public static Html nav_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element nav_(List<Html>) Build a nav element without any attributes. Declaration public static Html nav_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element nav_(ImmutableArray<Html>) Build a nav element without any attributes. Declaration public static Html nav_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element nav_(ImmutableList<Html>) Build a nav element without any attributes. Declaration public static Html nav_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element noscript(Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr, Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a noscript element. Declaration public static TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(Attr[]) Build a noscript element. Declaration public static TagBuilder noscript(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(IEnumerable<Attr>) Build a noscript element. Declaration public static TagBuilder noscript(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript(String, String, String, String, String, String) Build a noscript element. Declaration public static TagBuilder noscript(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children noscript_(Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element noscript_(Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element noscript_(Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element noscript_(Html, Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element noscript_(Html, Html, Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element noscript_(Html, Html, Html, Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element noscript_(Html, Html, Html, Html, Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element noscript_(Html, Html, Html, Html, Html, Html, Html, Html) Build a noscript element without any attributes. Declaration public static Html noscript_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element noscript_(Html[]) Build a noscript element without any attributes. Declaration public static Html noscript_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element noscript_(IEnumerable<Html>) Build a noscript element without any attributes. Declaration public static Html noscript_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element noscript_(List<Html>) Build a noscript element without any attributes. Declaration public static Html noscript_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element noscript_(ImmutableArray<Html>) Build a noscript element without any attributes. Declaration public static Html noscript_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element noscript_(ImmutableList<Html>) Build a noscript element without any attributes. Declaration public static Html noscript_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element object(Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr, Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an object element. Declaration public static TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(Attr[]) Build an object element. Declaration public static TagBuilder object(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(IEnumerable<Attr>) Build an object element. Declaration public static TagBuilder object(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children object(String, String, String, String, String, String, String, String, String, String, String) Build an object element. Declaration public static TagBuilder object(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string data = null, string height = null, string width = null, string name = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String data String height String width String name Returns Type Description TagBuilder A TagBuilder waiting for the element's children object_(Html) Build an object element without any attributes. Declaration public static Html object_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element object_(Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element object_(Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element object_(Html, Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element object_(Html, Html, Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element object_(Html, Html, Html, Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element object_(Html, Html, Html, Html, Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element object_(Html, Html, Html, Html, Html, Html, Html, Html) Build an object element without any attributes. Declaration public static Html object_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element object_(Html[]) Build an object element without any attributes. Declaration public static Html object_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element object_(IEnumerable<Html>) Build an object element without any attributes. Declaration public static Html object_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element object_(List<Html>) Build an object element without any attributes. Declaration public static Html object_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element object_(ImmutableArray<Html>) Build an object element without any attributes. Declaration public static Html object_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element object_(ImmutableList<Html>) Build an object element without any attributes. Declaration public static Html object_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element ol(Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr, Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an ol element. Declaration public static TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(Attr[]) Build an ol element. Declaration public static TagBuilder ol(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(IEnumerable<Attr>) Build an ol element. Declaration public static TagBuilder ol(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol(String, String, String, String, String, String, String, Boolean, String) Build an ol element. Declaration public static TagBuilder ol(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, bool reversed = false, string start = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type Boolean reversed String start Returns Type Description TagBuilder A TagBuilder waiting for the element's children ol_(Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element ol_(Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element ol_(Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element ol_(Html, Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element ol_(Html, Html, Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element ol_(Html, Html, Html, Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element ol_(Html, Html, Html, Html, Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element ol_(Html, Html, Html, Html, Html, Html, Html, Html) Build an ol element without any attributes. Declaration public static Html ol_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element ol_(Html[]) Build an ol element without any attributes. Declaration public static Html ol_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element ol_(IEnumerable<Html>) Build an ol element without any attributes. Declaration public static Html ol_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element ol_(List<Html>) Build an ol element without any attributes. Declaration public static Html ol_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element ol_(ImmutableArray<Html>) Build an ol element without any attributes. Declaration public static Html ol_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element ol_(ImmutableList<Html>) Build an ol element without any attributes. Declaration public static Html ol_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element optgroup(Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr, Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an optgroup element. Declaration public static TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(Attr[]) Build an optgroup element. Declaration public static TagBuilder optgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(IEnumerable<Attr>) Build an optgroup element. Declaration public static TagBuilder optgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup(String, String, String, String, String, String, String, Boolean) Build an optgroup element. Declaration public static TagBuilder optgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string label = null, bool disabled = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String label Boolean disabled Returns Type Description TagBuilder A TagBuilder waiting for the element's children optgroup_(Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element optgroup_(Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element optgroup_(Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element optgroup_(Html, Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element optgroup_(Html, Html, Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element optgroup_(Html, Html, Html, Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element optgroup_(Html, Html, Html, Html, Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element optgroup_(Html, Html, Html, Html, Html, Html, Html, Html) Build an optgroup element without any attributes. Declaration public static Html optgroup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element optgroup_(Html[]) Build an optgroup element without any attributes. Declaration public static Html optgroup_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element optgroup_(IEnumerable<Html>) Build an optgroup element without any attributes. Declaration public static Html optgroup_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element optgroup_(List<Html>) Build an optgroup element without any attributes. Declaration public static Html optgroup_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element optgroup_(ImmutableArray<Html>) Build an optgroup element without any attributes. Declaration public static Html optgroup_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element optgroup_(ImmutableList<Html>) Build an optgroup element without any attributes. Declaration public static Html optgroup_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element option(Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr, Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an option element. Declaration public static TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(Attr[]) Build an option element. Declaration public static TagBuilder option(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(IEnumerable<Attr>) Build an option element. Declaration public static TagBuilder option(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children option(String, String, String, String, String, String, String, String, Boolean, Boolean) Build an option element. Declaration public static TagBuilder option(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string label = null, string value = null, bool disabled = false, bool selected = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String label String value Boolean disabled Boolean selected Returns Type Description TagBuilder A TagBuilder waiting for the element's children option_(Html) Build an option element without any attributes. Declaration public static Html option_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element option_(Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element option_(Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element option_(Html, Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element option_(Html, Html, Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element option_(Html, Html, Html, Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element option_(Html, Html, Html, Html, Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element option_(Html, Html, Html, Html, Html, Html, Html, Html) Build an option element without any attributes. Declaration public static Html option_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element option_(Html[]) Build an option element without any attributes. Declaration public static Html option_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element option_(IEnumerable<Html>) Build an option element without any attributes. Declaration public static Html option_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element option_(List<Html>) Build an option element without any attributes. Declaration public static Html option_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element option_(ImmutableArray<Html>) Build an option element without any attributes. Declaration public static Html option_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element option_(ImmutableList<Html>) Build an option element without any attributes. Declaration public static Html option_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element output(Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr, Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an output element. Declaration public static TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(Attr[]) Build an output element. Declaration public static TagBuilder output(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(IEnumerable<Attr>) Build an output element. Declaration public static TagBuilder output(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children output(String, String, String, String, String, String, String, String, String) Build an output element. Declaration public static TagBuilder output(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string for = null, string name = null, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String for String name String form Returns Type Description TagBuilder A TagBuilder waiting for the element's children output_(Html) Build an output element without any attributes. Declaration public static Html output_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element output_(Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element output_(Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element output_(Html, Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element output_(Html, Html, Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element output_(Html, Html, Html, Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element output_(Html, Html, Html, Html, Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element output_(Html, Html, Html, Html, Html, Html, Html, Html) Build an output element without any attributes. Declaration public static Html output_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element output_(Html[]) Build an output element without any attributes. Declaration public static Html output_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element output_(IEnumerable<Html>) Build an output element without any attributes. Declaration public static Html output_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element output_(List<Html>) Build an output element without any attributes. Declaration public static Html output_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element output_(ImmutableArray<Html>) Build an output element without any attributes. Declaration public static Html output_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element output_(ImmutableList<Html>) Build an output element without any attributes. Declaration public static Html output_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element p(Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr, Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a p element. Declaration public static TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(Attr[]) Build a p element. Declaration public static TagBuilder p(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(IEnumerable<Attr>) Build a p element. Declaration public static TagBuilder p(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children p(String, String, String, String, String, String) Build a p element. Declaration public static TagBuilder p(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children p_(Html) Build a p element without any attributes. Declaration public static Html p_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element p_(Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element p_(Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element p_(Html, Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element p_(Html, Html, Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element p_(Html, Html, Html, Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element p_(Html, Html, Html, Html, Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element p_(Html, Html, Html, Html, Html, Html, Html, Html) Build a p element without any attributes. Declaration public static Html p_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element p_(Html[]) Build a p element without any attributes. Declaration public static Html p_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element p_(IEnumerable<Html>) Build a p element without any attributes. Declaration public static Html p_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element p_(List<Html>) Build a p element without any attributes. Declaration public static Html p_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element p_(ImmutableArray<Html>) Build a p element without any attributes. Declaration public static Html p_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element p_(ImmutableList<Html>) Build a p element without any attributes. Declaration public static Html p_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element param(Attr) Build a param element. Declaration public static Html param(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element param(Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element param(Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element param(Attr, Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element param(Attr, Attr, Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element param(Attr, Attr, Attr, Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element param(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element param(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a param element. Declaration public static Html param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element param(Attr[]) Build a param element. Declaration public static Html param(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element param(IEnumerable<Attr>) Build a param element. Declaration public static Html param(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element param(String, String, String, String, String, String, String, String) Build a param element. Declaration public static Html param(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String value Returns Type Description Html The element picture(Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr, Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a picture element. Declaration public static TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(Attr[]) Build a picture element. Declaration public static TagBuilder picture(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(IEnumerable<Attr>) Build a picture element. Declaration public static TagBuilder picture(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture(String, String, String, String, String, String) Build a picture element. Declaration public static TagBuilder picture(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children picture_(Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element picture_(Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element picture_(Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element picture_(Html, Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element picture_(Html, Html, Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element picture_(Html, Html, Html, Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element picture_(Html, Html, Html, Html, Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element picture_(Html, Html, Html, Html, Html, Html, Html, Html) Build a picture element without any attributes. Declaration public static Html picture_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element picture_(Html[]) Build a picture element without any attributes. Declaration public static Html picture_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element picture_(IEnumerable<Html>) Build a picture element without any attributes. Declaration public static Html picture_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element picture_(List<Html>) Build a picture element without any attributes. Declaration public static Html picture_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element picture_(ImmutableArray<Html>) Build a picture element without any attributes. Declaration public static Html picture_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element picture_(ImmutableList<Html>) Build a picture element without any attributes. Declaration public static Html picture_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element pre(Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr, Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a pre element. Declaration public static TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(Attr[]) Build a pre element. Declaration public static TagBuilder pre(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(IEnumerable<Attr>) Build a pre element. Declaration public static TagBuilder pre(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre(String, String, String, String, String, String) Build a pre element. Declaration public static TagBuilder pre(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children pre_(Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element pre_(Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element pre_(Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element pre_(Html, Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element pre_(Html, Html, Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element pre_(Html, Html, Html, Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element pre_(Html, Html, Html, Html, Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element pre_(Html, Html, Html, Html, Html, Html, Html, Html) Build a pre element without any attributes. Declaration public static Html pre_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element pre_(Html[]) Build a pre element without any attributes. Declaration public static Html pre_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element pre_(IEnumerable<Html>) Build a pre element without any attributes. Declaration public static Html pre_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element pre_(List<Html>) Build a pre element without any attributes. Declaration public static Html pre_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element pre_(ImmutableArray<Html>) Build a pre element without any attributes. Declaration public static Html pre_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element pre_(ImmutableList<Html>) Build a pre element without any attributes. Declaration public static Html pre_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element progress(Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr, Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a progress element. Declaration public static TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(Attr[]) Build a progress element. Declaration public static TagBuilder progress(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(IEnumerable<Attr>) Build a progress element. Declaration public static TagBuilder progress(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress(String, String, String, String, String, String, String, String) Build a progress element. Declaration public static TagBuilder progress(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null, string max = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value String max Returns Type Description TagBuilder A TagBuilder waiting for the element's children progress_(Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element progress_(Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element progress_(Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element progress_(Html, Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element progress_(Html, Html, Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element progress_(Html, Html, Html, Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element progress_(Html, Html, Html, Html, Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element progress_(Html, Html, Html, Html, Html, Html, Html, Html) Build a progress element without any attributes. Declaration public static Html progress_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element progress_(Html[]) Build a progress element without any attributes. Declaration public static Html progress_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element progress_(IEnumerable<Html>) Build a progress element without any attributes. Declaration public static Html progress_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element progress_(List<Html>) Build a progress element without any attributes. Declaration public static Html progress_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element progress_(ImmutableArray<Html>) Build a progress element without any attributes. Declaration public static Html progress_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element progress_(ImmutableList<Html>) Build a progress element without any attributes. Declaration public static Html progress_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element q(Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr, Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a q element. Declaration public static TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(Attr[]) Build a q element. Declaration public static TagBuilder q(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(IEnumerable<Attr>) Build a q element. Declaration public static TagBuilder q(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children q(String, String, String, String, String, String, String) Build a q element. Declaration public static TagBuilder q(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string cite = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String cite Returns Type Description TagBuilder A TagBuilder waiting for the element's children q_(Html) Build a q element without any attributes. Declaration public static Html q_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element q_(Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element q_(Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element q_(Html, Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element q_(Html, Html, Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element q_(Html, Html, Html, Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element q_(Html, Html, Html, Html, Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element q_(Html, Html, Html, Html, Html, Html, Html, Html) Build a q element without any attributes. Declaration public static Html q_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element q_(Html[]) Build a q element without any attributes. Declaration public static Html q_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element q_(IEnumerable<Html>) Build a q element without any attributes. Declaration public static Html q_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element q_(List<Html>) Build a q element without any attributes. Declaration public static Html q_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element q_(ImmutableArray<Html>) Build a q element without any attributes. Declaration public static Html q_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element q_(ImmutableList<Html>) Build a q element without any attributes. Declaration public static Html q_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element Raw(String) Render a string without HTML-encoding it first. Declaration public static Html Raw(string rawHtml) Parameters Type Name Description String rawHtml The pre-encoded string Returns Type Description Html An instance of Html . s(Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr, Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an s element. Declaration public static TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(Attr[]) Build an s element. Declaration public static TagBuilder s(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(IEnumerable<Attr>) Build an s element. Declaration public static TagBuilder s(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children s(String, String, String, String, String, String) Build an s element. Declaration public static TagBuilder s(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children s_(Html) Build an s element without any attributes. Declaration public static Html s_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element s_(Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element s_(Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element s_(Html, Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element s_(Html, Html, Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element s_(Html, Html, Html, Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element s_(Html, Html, Html, Html, Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element s_(Html, Html, Html, Html, Html, Html, Html, Html) Build an s element without any attributes. Declaration public static Html s_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element s_(Html[]) Build an s element without any attributes. Declaration public static Html s_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element s_(IEnumerable<Html>) Build an s element without any attributes. Declaration public static Html s_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element s_(List<Html>) Build an s element without any attributes. Declaration public static Html s_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element s_(ImmutableArray<Html>) Build an s element without any attributes. Declaration public static Html s_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element s_(ImmutableList<Html>) Build an s element without any attributes. Declaration public static Html s_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element samp(Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr, Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a samp element. Declaration public static TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(Attr[]) Build a samp element. Declaration public static TagBuilder samp(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(IEnumerable<Attr>) Build a samp element. Declaration public static TagBuilder samp(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp(String, String, String, String, String, String) Build a samp element. Declaration public static TagBuilder samp(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children samp_(Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element samp_(Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element samp_(Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element samp_(Html, Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element samp_(Html, Html, Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element samp_(Html, Html, Html, Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element samp_(Html, Html, Html, Html, Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element samp_(Html, Html, Html, Html, Html, Html, Html, Html) Build a samp element without any attributes. Declaration public static Html samp_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element samp_(Html[]) Build a samp element without any attributes. Declaration public static Html samp_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element samp_(IEnumerable<Html>) Build a samp element without any attributes. Declaration public static Html samp_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element samp_(List<Html>) Build a samp element without any attributes. Declaration public static Html samp_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element samp_(ImmutableArray<Html>) Build a samp element without any attributes. Declaration public static Html samp_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element samp_(ImmutableList<Html>) Build a samp element without any attributes. Declaration public static Html samp_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element script(Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr, Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a script element. Declaration public static TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(Attr[]) Build a script element. Declaration public static TagBuilder script(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(IEnumerable<Attr>) Build a script element. Declaration public static TagBuilder script(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children script(String, String, String, String, String, String, String, String, String, Boolean) Build a script element. Declaration public static TagBuilder script(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null, string crossorigin = null, bool async = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src String crossorigin Boolean async Returns Type Description TagBuilder A TagBuilder waiting for the element's children script_(Html) Build a script element without any attributes. Declaration public static Html script_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element script_(Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element script_(Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element script_(Html, Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element script_(Html, Html, Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element script_(Html, Html, Html, Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element script_(Html, Html, Html, Html, Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element script_(Html, Html, Html, Html, Html, Html, Html, Html) Build a script element without any attributes. Declaration public static Html script_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element script_(Html[]) Build a script element without any attributes. Declaration public static Html script_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element script_(IEnumerable<Html>) Build a script element without any attributes. Declaration public static Html script_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element script_(List<Html>) Build a script element without any attributes. Declaration public static Html script_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element script_(ImmutableArray<Html>) Build a script element without any attributes. Declaration public static Html script_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element script_(ImmutableList<Html>) Build a script element without any attributes. Declaration public static Html script_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element section(Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr, Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a section element. Declaration public static TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(Attr[]) Build a section element. Declaration public static TagBuilder section(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(IEnumerable<Attr>) Build a section element. Declaration public static TagBuilder section(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children section(String, String, String, String, String, String) Build a section element. Declaration public static TagBuilder section(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children section_(Html) Build a section element without any attributes. Declaration public static Html section_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element section_(Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element section_(Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element section_(Html, Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element section_(Html, Html, Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element section_(Html, Html, Html, Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element section_(Html, Html, Html, Html, Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element section_(Html, Html, Html, Html, Html, Html, Html, Html) Build a section element without any attributes. Declaration public static Html section_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element section_(Html[]) Build a section element without any attributes. Declaration public static Html section_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element section_(IEnumerable<Html>) Build a section element without any attributes. Declaration public static Html section_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element section_(List<Html>) Build a section element without any attributes. Declaration public static Html section_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element section_(ImmutableArray<Html>) Build a section element without any attributes. Declaration public static Html section_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element section_(ImmutableList<Html>) Build a section element without any attributes. Declaration public static Html section_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element select(Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr, Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a select element. Declaration public static TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(Attr[]) Build a select element. Declaration public static TagBuilder select(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(IEnumerable<Attr>) Build a select element. Declaration public static TagBuilder select(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children select(String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, String) Build a select element. Declaration public static TagBuilder select(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string multiple = null, string size = null, bool autofocus = false, bool disabled = false, bool required = false, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String multiple String size Boolean autofocus Boolean disabled Boolean required String form Returns Type Description TagBuilder A TagBuilder waiting for the element's children select_(Html) Build a select element without any attributes. Declaration public static Html select_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element select_(Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element select_(Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element select_(Html, Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element select_(Html, Html, Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element select_(Html, Html, Html, Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element select_(Html, Html, Html, Html, Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element select_(Html, Html, Html, Html, Html, Html, Html, Html) Build a select element without any attributes. Declaration public static Html select_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element select_(Html[]) Build a select element without any attributes. Declaration public static Html select_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element select_(IEnumerable<Html>) Build a select element without any attributes. Declaration public static Html select_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element select_(List<Html>) Build a select element without any attributes. Declaration public static Html select_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element select_(ImmutableArray<Html>) Build a select element without any attributes. Declaration public static Html select_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element select_(ImmutableList<Html>) Build a select element without any attributes. Declaration public static Html select_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element SelfClosingTag(String, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1) Parameters Type Name Description String name Attr attr1 Returns Type Description Html SelfClosingTag(String, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2) Parameters Type Name Description String name Attr attr1 Attr attr2 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html SelfClosingTag(String, Attr[]) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, params Attr[] attrs) Parameters Type Name Description String name Attr [] attrs Returns Type Description Html SelfClosingTag(String, IEnumerable<Attr>) Create a tag which does not take children. Declaration public static Html SelfClosingTag(string name, IEnumerable<Attr> attrs) Parameters Type Name Description String name IEnumerable < Attr > attrs Returns Type Description Html small(Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr, Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a small element. Declaration public static TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(Attr[]) Build a small element. Declaration public static TagBuilder small(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(IEnumerable<Attr>) Build a small element. Declaration public static TagBuilder small(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children small(String, String, String, String, String, String) Build a small element. Declaration public static TagBuilder small(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children small_(Html) Build a small element without any attributes. Declaration public static Html small_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element small_(Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element small_(Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element small_(Html, Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element small_(Html, Html, Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element small_(Html, Html, Html, Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element small_(Html, Html, Html, Html, Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element small_(Html, Html, Html, Html, Html, Html, Html, Html) Build a small element without any attributes. Declaration public static Html small_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element small_(Html[]) Build a small element without any attributes. Declaration public static Html small_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element small_(IEnumerable<Html>) Build a small element without any attributes. Declaration public static Html small_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element small_(List<Html>) Build a small element without any attributes. Declaration public static Html small_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element small_(ImmutableArray<Html>) Build a small element without any attributes. Declaration public static Html small_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element small_(ImmutableList<Html>) Build a small element without any attributes. Declaration public static Html small_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element source(Attr) Build a source element. Declaration public static Html source(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element source(Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element source(Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element source(Attr, Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element source(Attr, Attr, Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element source(Attr, Attr, Attr, Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element source(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element source(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a source element. Declaration public static Html source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element source(Attr[]) Build a source element. Declaration public static Html source(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element source(IEnumerable<Attr>) Build a source element. Declaration public static Html source(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element source(String, String, String, String, String, String, String, String) Build a source element. Declaration public static Html source(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src Returns Type Description Html The element span(Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr, Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a span element. Declaration public static TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(Attr[]) Build a span element. Declaration public static TagBuilder span(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(IEnumerable<Attr>) Build a span element. Declaration public static TagBuilder span(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children span(String, String, String, String, String, String) Build a span element. Declaration public static TagBuilder span(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children span_(Html) Build a span element without any attributes. Declaration public static Html span_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element span_(Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element span_(Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element span_(Html, Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element span_(Html, Html, Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element span_(Html, Html, Html, Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element span_(Html, Html, Html, Html, Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element span_(Html, Html, Html, Html, Html, Html, Html, Html) Build a span element without any attributes. Declaration public static Html span_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element span_(Html[]) Build a span element without any attributes. Declaration public static Html span_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element span_(IEnumerable<Html>) Build a span element without any attributes. Declaration public static Html span_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element span_(List<Html>) Build a span element without any attributes. Declaration public static Html span_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element span_(ImmutableArray<Html>) Build a span element without any attributes. Declaration public static Html span_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element span_(ImmutableList<Html>) Build a span element without any attributes. Declaration public static Html span_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element strong(Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr, Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a strong element. Declaration public static TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(Attr[]) Build a strong element. Declaration public static TagBuilder strong(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(IEnumerable<Attr>) Build a strong element. Declaration public static TagBuilder strong(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong(String, String, String, String, String, String) Build a strong element. Declaration public static TagBuilder strong(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children strong_(Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element strong_(Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element strong_(Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element strong_(Html, Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element strong_(Html, Html, Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element strong_(Html, Html, Html, Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element strong_(Html, Html, Html, Html, Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element strong_(Html, Html, Html, Html, Html, Html, Html, Html) Build a strong element without any attributes. Declaration public static Html strong_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element strong_(Html[]) Build a strong element without any attributes. Declaration public static Html strong_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element strong_(IEnumerable<Html>) Build a strong element without any attributes. Declaration public static Html strong_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element strong_(List<Html>) Build a strong element without any attributes. Declaration public static Html strong_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element strong_(ImmutableArray<Html>) Build a strong element without any attributes. Declaration public static Html strong_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element strong_(ImmutableList<Html>) Build a strong element without any attributes. Declaration public static Html strong_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element style(Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr, Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a style element. Declaration public static TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(Attr[]) Build a style element. Declaration public static TagBuilder style(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(IEnumerable<Attr>) Build a style element. Declaration public static TagBuilder style(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children style(String, String, String, String, String, String, String, String) Build a style element. Declaration public static TagBuilder style(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string media = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String media Returns Type Description TagBuilder A TagBuilder waiting for the element's children style_(Html) Build a style element without any attributes. Declaration public static Html style_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element style_(Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element style_(Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element style_(Html, Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element style_(Html, Html, Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element style_(Html, Html, Html, Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element style_(Html, Html, Html, Html, Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element style_(Html, Html, Html, Html, Html, Html, Html, Html) Build a style element without any attributes. Declaration public static Html style_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element style_(Html[]) Build a style element without any attributes. Declaration public static Html style_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element style_(IEnumerable<Html>) Build a style element without any attributes. Declaration public static Html style_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element style_(List<Html>) Build a style element without any attributes. Declaration public static Html style_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element style_(ImmutableArray<Html>) Build a style element without any attributes. Declaration public static Html style_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element style_(ImmutableList<Html>) Build a style element without any attributes. Declaration public static Html style_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element sub(Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr, Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a sub element. Declaration public static TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(Attr[]) Build a sub element. Declaration public static TagBuilder sub(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(IEnumerable<Attr>) Build a sub element. Declaration public static TagBuilder sub(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub(String, String, String, String, String, String) Build a sub element. Declaration public static TagBuilder sub(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children sub_(Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element sub_(Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element sub_(Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element sub_(Html, Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element sub_(Html, Html, Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element sub_(Html, Html, Html, Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element sub_(Html, Html, Html, Html, Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element sub_(Html, Html, Html, Html, Html, Html, Html, Html) Build a sub element without any attributes. Declaration public static Html sub_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element sub_(Html[]) Build a sub element without any attributes. Declaration public static Html sub_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element sub_(IEnumerable<Html>) Build a sub element without any attributes. Declaration public static Html sub_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element sub_(List<Html>) Build a sub element without any attributes. Declaration public static Html sub_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element sub_(ImmutableArray<Html>) Build a sub element without any attributes. Declaration public static Html sub_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element sub_(ImmutableList<Html>) Build a sub element without any attributes. Declaration public static Html sub_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element summary(Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr, Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a summary element. Declaration public static TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(Attr[]) Build a summary element. Declaration public static TagBuilder summary(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(IEnumerable<Attr>) Build a summary element. Declaration public static TagBuilder summary(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary(String, String, String, String, String, String) Build a summary element. Declaration public static TagBuilder summary(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children summary_(Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element summary_(Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element summary_(Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element summary_(Html, Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element summary_(Html, Html, Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element summary_(Html, Html, Html, Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element summary_(Html, Html, Html, Html, Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element summary_(Html, Html, Html, Html, Html, Html, Html, Html) Build a summary element without any attributes. Declaration public static Html summary_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element summary_(Html[]) Build a summary element without any attributes. Declaration public static Html summary_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element summary_(IEnumerable<Html>) Build a summary element without any attributes. Declaration public static Html summary_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element summary_(List<Html>) Build a summary element without any attributes. Declaration public static Html summary_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element summary_(ImmutableArray<Html>) Build a summary element without any attributes. Declaration public static Html summary_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element summary_(ImmutableList<Html>) Build a summary element without any attributes. Declaration public static Html summary_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element sup(Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr, Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a sup element. Declaration public static TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(Attr[]) Build a sup element. Declaration public static TagBuilder sup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(IEnumerable<Attr>) Build a sup element. Declaration public static TagBuilder sup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup(String, String, String, String, String, String) Build a sup element. Declaration public static TagBuilder sup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children sup_(Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element sup_(Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element sup_(Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element sup_(Html, Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element sup_(Html, Html, Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element sup_(Html, Html, Html, Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element sup_(Html, Html, Html, Html, Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element sup_(Html, Html, Html, Html, Html, Html, Html, Html) Build a sup element without any attributes. Declaration public static Html sup_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element sup_(Html[]) Build a sup element without any attributes. Declaration public static Html sup_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element sup_(IEnumerable<Html>) Build a sup element without any attributes. Declaration public static Html sup_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element sup_(List<Html>) Build a sup element without any attributes. Declaration public static Html sup_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element sup_(ImmutableArray<Html>) Build a sup element without any attributes. Declaration public static Html sup_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element sup_(ImmutableList<Html>) Build a sup element without any attributes. Declaration public static Html sup_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element table(Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr, Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a table element. Declaration public static TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(Attr[]) Build a table element. Declaration public static TagBuilder table(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(IEnumerable<Attr>) Build a table element. Declaration public static TagBuilder table(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children table(String, String, String, String, String, String) Build a table element. Declaration public static TagBuilder table(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children table_(Html) Build a table element without any attributes. Declaration public static Html table_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element table_(Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element table_(Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element table_(Html, Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element table_(Html, Html, Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element table_(Html, Html, Html, Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element table_(Html, Html, Html, Html, Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element table_(Html, Html, Html, Html, Html, Html, Html, Html) Build a table element without any attributes. Declaration public static Html table_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element table_(Html[]) Build a table element without any attributes. Declaration public static Html table_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element table_(IEnumerable<Html>) Build a table element without any attributes. Declaration public static Html table_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element table_(List<Html>) Build a table element without any attributes. Declaration public static Html table_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element table_(ImmutableArray<Html>) Build a table element without any attributes. Declaration public static Html table_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element table_(ImmutableList<Html>) Build a table element without any attributes. Declaration public static Html table_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element Tag(String, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1) Parameters Type Name Description String name Attr attr1 Returns Type Description TagBuilder Tag(String, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2) Parameters Type Name Description String name Attr attr1 Attr attr2 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder Tag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder Tag(String, Attr[]) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, params Attr[] attrs) Parameters Type Name Description String name Attr [] attrs Returns Type Description TagBuilder Tag(String, IEnumerable<Attr>) Create a tag which takes children. Declaration public static TagBuilder Tag(string name, IEnumerable<Attr> attrs) Parameters Type Name Description String name IEnumerable < Attr > attrs Returns Type Description TagBuilder Tag_(String, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1) Parameters Type Name Description String name Html child1 Returns Type Description Html Tag_(String, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2) Parameters Type Name Description String name Html child1 Html child2 Returns Type Description Html Tag_(String, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3) Parameters Type Name Description String name Html child1 Html child2 Html child3 Returns Type Description Html Tag_(String, Html, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description String name Html child1 Html child2 Html child3 Html child4 Returns Type Description Html Tag_(String, Html, Html, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description String name Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html Tag_(String, Html, Html, Html, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description String name Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html Tag_(String, Html, Html, Html, Html, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description String name Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html Tag_(String, Html, Html, Html, Html, Html, Html, Html, Html) Create a tag without any attributes. Declaration public static Html Tag_(string name, Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description String name Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html Tag_(String, Html[]) Create a tag without any attributes. Declaration public static Html Tag_(string name, params Html[] children) Parameters Type Name Description String name Html [] children Returns Type Description Html Tag_(String, IEnumerable<Html>) Create a tag without any attributes. Declaration public static Html Tag_(string name, IEnumerable<Html> children) Parameters Type Name Description String name IEnumerable < Html > children Returns Type Description Html Tag_(String, List<Html>) Create a tag without any attributes. Declaration public static Html Tag_(string name, List<Html> children) Parameters Type Name Description String name List < Html > children Returns Type Description Html Tag_(String, ImmutableArray<Html>) Create a tag without any attributes. Declaration public static Html Tag_(string name, ImmutableArray<Html> children) Parameters Type Name Description String name ImmutableArray < Html > children Returns Type Description Html Tag_(String, ImmutableList<Html>) Create a tag without any attributes. Declaration public static Html Tag_(string name, ImmutableList<Html> children) Parameters Type Name Description String name ImmutableList < Html > children Returns Type Description Html tbody(Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr, Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tbody element. Declaration public static TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(Attr[]) Build a tbody element. Declaration public static TagBuilder tbody(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(IEnumerable<Attr>) Build a tbody element. Declaration public static TagBuilder tbody(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody(String, String, String, String, String, String) Build a tbody element. Declaration public static TagBuilder tbody(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children tbody_(Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element tbody_(Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element tbody_(Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element tbody_(Html, Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element tbody_(Html, Html, Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element tbody_(Html, Html, Html, Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element tbody_(Html, Html, Html, Html, Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element tbody_(Html, Html, Html, Html, Html, Html, Html, Html) Build a tbody element without any attributes. Declaration public static Html tbody_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element tbody_(Html[]) Build a tbody element without any attributes. Declaration public static Html tbody_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element tbody_(IEnumerable<Html>) Build a tbody element without any attributes. Declaration public static Html tbody_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element tbody_(List<Html>) Build a tbody element without any attributes. Declaration public static Html tbody_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element tbody_(ImmutableArray<Html>) Build a tbody element without any attributes. Declaration public static Html tbody_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element tbody_(ImmutableList<Html>) Build a tbody element without any attributes. Declaration public static Html tbody_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element td(Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr, Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a td element. Declaration public static TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(Attr[]) Build a td element. Declaration public static TagBuilder td(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(IEnumerable<Attr>) Build a td element. Declaration public static TagBuilder td(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children td(String, String, String, String, String, String, String, String, String) Build a td element. Declaration public static TagBuilder td(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string colspan = null, string rowspan = null, string headers = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String colspan String rowspan String headers Returns Type Description TagBuilder A TagBuilder waiting for the element's children td_(Html) Build a td element without any attributes. Declaration public static Html td_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element td_(Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element td_(Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element td_(Html, Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element td_(Html, Html, Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element td_(Html, Html, Html, Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element td_(Html, Html, Html, Html, Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element td_(Html, Html, Html, Html, Html, Html, Html, Html) Build a td element without any attributes. Declaration public static Html td_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element td_(Html[]) Build a td element without any attributes. Declaration public static Html td_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element td_(IEnumerable<Html>) Build a td element without any attributes. Declaration public static Html td_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element td_(List<Html>) Build a td element without any attributes. Declaration public static Html td_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element td_(ImmutableArray<Html>) Build a td element without any attributes. Declaration public static Html td_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element td_(ImmutableList<Html>) Build a td element without any attributes. Declaration public static Html td_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element Text(String) Render HTML-encoded text. Declaration public static Html Text(string text) Parameters Type Name Description String text The text to HTML-encode Returns Type Description Html An instance of Html . textarea(Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr, Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a textarea element. Declaration public static TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(Attr[]) Build a textarea element. Declaration public static TagBuilder textarea(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(IEnumerable<Attr>) Build a textarea element. Declaration public static TagBuilder textarea(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea(String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, String, String, String, String) Build a textarea element. Declaration public static TagBuilder textarea(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string placeholder = null, string autocomplete = null, string cols = null, string rows = null, string wrap = null, bool autofocus = false, bool disabled = false, bool readonly = false, bool required = false, string src = null, string maxlength = null, string minlength = null, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String placeholder String autocomplete String cols String rows String wrap Boolean autofocus Boolean disabled Boolean readonly Boolean required String src String maxlength String minlength String form Returns Type Description TagBuilder A TagBuilder waiting for the element's children textarea_(Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element textarea_(Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element textarea_(Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element textarea_(Html, Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element textarea_(Html, Html, Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element textarea_(Html, Html, Html, Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element textarea_(Html, Html, Html, Html, Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element textarea_(Html, Html, Html, Html, Html, Html, Html, Html) Build a textarea element without any attributes. Declaration public static Html textarea_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element textarea_(Html[]) Build a textarea element without any attributes. Declaration public static Html textarea_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element textarea_(IEnumerable<Html>) Build a textarea element without any attributes. Declaration public static Html textarea_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element textarea_(List<Html>) Build a textarea element without any attributes. Declaration public static Html textarea_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element textarea_(ImmutableArray<Html>) Build a textarea element without any attributes. Declaration public static Html textarea_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element textarea_(ImmutableList<Html>) Build a textarea element without any attributes. Declaration public static Html textarea_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element tfoot(Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr, Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tfoot element. Declaration public static TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(Attr[]) Build a tfoot element. Declaration public static TagBuilder tfoot(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(IEnumerable<Attr>) Build a tfoot element. Declaration public static TagBuilder tfoot(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot(String, String, String, String, String, String) Build a tfoot element. Declaration public static TagBuilder tfoot(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children tfoot_(Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element tfoot_(Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element tfoot_(Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element tfoot_(Html, Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element tfoot_(Html, Html, Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element tfoot_(Html, Html, Html, Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element tfoot_(Html, Html, Html, Html, Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element tfoot_(Html, Html, Html, Html, Html, Html, Html, Html) Build a tfoot element without any attributes. Declaration public static Html tfoot_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element tfoot_(Html[]) Build a tfoot element without any attributes. Declaration public static Html tfoot_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element tfoot_(IEnumerable<Html>) Build a tfoot element without any attributes. Declaration public static Html tfoot_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element tfoot_(List<Html>) Build a tfoot element without any attributes. Declaration public static Html tfoot_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element tfoot_(ImmutableArray<Html>) Build a tfoot element without any attributes. Declaration public static Html tfoot_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element tfoot_(ImmutableList<Html>) Build a tfoot element without any attributes. Declaration public static Html tfoot_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element th(Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr, Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a th element. Declaration public static TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(Attr[]) Build a th element. Declaration public static TagBuilder th(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(IEnumerable<Attr>) Build a th element. Declaration public static TagBuilder th(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children th(String, String, String, String, String, String, String, String, String, String) Build a th element. Declaration public static TagBuilder th(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string colspan = null, string rowspan = null, string headers = null, string scope = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String colspan String rowspan String headers String scope Returns Type Description TagBuilder A TagBuilder waiting for the element's children th_(Html) Build a th element without any attributes. Declaration public static Html th_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element th_(Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element th_(Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element th_(Html, Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element th_(Html, Html, Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element th_(Html, Html, Html, Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element th_(Html, Html, Html, Html, Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element th_(Html, Html, Html, Html, Html, Html, Html, Html) Build a th element without any attributes. Declaration public static Html th_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element th_(Html[]) Build a th element without any attributes. Declaration public static Html th_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element th_(IEnumerable<Html>) Build a th element without any attributes. Declaration public static Html th_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element th_(List<Html>) Build a th element without any attributes. Declaration public static Html th_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element th_(ImmutableArray<Html>) Build a th element without any attributes. Declaration public static Html th_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element th_(ImmutableList<Html>) Build a th element without any attributes. Declaration public static Html th_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element thead(Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr, Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a thead element. Declaration public static TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(Attr[]) Build a thead element. Declaration public static TagBuilder thead(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(IEnumerable<Attr>) Build a thead element. Declaration public static TagBuilder thead(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead(String, String, String, String, String, String) Build a thead element. Declaration public static TagBuilder thead(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children thead_(Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element thead_(Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element thead_(Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element thead_(Html, Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element thead_(Html, Html, Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element thead_(Html, Html, Html, Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element thead_(Html, Html, Html, Html, Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element thead_(Html, Html, Html, Html, Html, Html, Html, Html) Build a thead element without any attributes. Declaration public static Html thead_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element thead_(Html[]) Build a thead element without any attributes. Declaration public static Html thead_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element thead_(IEnumerable<Html>) Build a thead element without any attributes. Declaration public static Html thead_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element thead_(List<Html>) Build a thead element without any attributes. Declaration public static Html thead_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element thead_(ImmutableArray<Html>) Build a thead element without any attributes. Declaration public static Html thead_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element thead_(ImmutableList<Html>) Build a thead element without any attributes. Declaration public static Html thead_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element time(Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr, Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a time element. Declaration public static TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(Attr[]) Build a time element. Declaration public static TagBuilder time(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(IEnumerable<Attr>) Build a time element. Declaration public static TagBuilder time(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children time(String, String, String, String, String, String, String) Build a time element. Declaration public static TagBuilder time(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string datetime = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String datetime Returns Type Description TagBuilder A TagBuilder waiting for the element's children time_(Html) Build a time element without any attributes. Declaration public static Html time_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element time_(Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element time_(Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element time_(Html, Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element time_(Html, Html, Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element time_(Html, Html, Html, Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element time_(Html, Html, Html, Html, Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element time_(Html, Html, Html, Html, Html, Html, Html, Html) Build a time element without any attributes. Declaration public static Html time_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element time_(Html[]) Build a time element without any attributes. Declaration public static Html time_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element time_(IEnumerable<Html>) Build a time element without any attributes. Declaration public static Html time_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element time_(List<Html>) Build a time element without any attributes. Declaration public static Html time_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element time_(ImmutableArray<Html>) Build a time element without any attributes. Declaration public static Html time_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element time_(ImmutableList<Html>) Build a time element without any attributes. Declaration public static Html time_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element title(Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr, Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a title element. Declaration public static TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(Attr[]) Build a title element. Declaration public static TagBuilder title(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(IEnumerable<Attr>) Build a title element. Declaration public static TagBuilder title(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children title(String, String, String, String, String, String) Build a title element. Declaration public static TagBuilder title(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children title_(Html) Build a title element without any attributes. Declaration public static Html title_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element title_(Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element title_(Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element title_(Html, Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element title_(Html, Html, Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element title_(Html, Html, Html, Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element title_(Html, Html, Html, Html, Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element title_(Html, Html, Html, Html, Html, Html, Html, Html) Build a title element without any attributes. Declaration public static Html title_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element title_(Html[]) Build a title element without any attributes. Declaration public static Html title_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element title_(IEnumerable<Html>) Build a title element without any attributes. Declaration public static Html title_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element title_(List<Html>) Build a title element without any attributes. Declaration public static Html title_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element title_(ImmutableArray<Html>) Build a title element without any attributes. Declaration public static Html title_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element title_(ImmutableList<Html>) Build a title element without any attributes. Declaration public static Html title_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element ToString() Write the HTML to a String Declaration public override string ToString() Returns Type Description String tr(Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr, Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a tr element. Declaration public static TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(Attr[]) Build a tr element. Declaration public static TagBuilder tr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(IEnumerable<Attr>) Build a tr element. Declaration public static TagBuilder tr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr(String, String, String, String, String, String) Build a tr element. Declaration public static TagBuilder tr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children tr_(Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element tr_(Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element tr_(Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element tr_(Html, Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element tr_(Html, Html, Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element tr_(Html, Html, Html, Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element tr_(Html, Html, Html, Html, Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element tr_(Html, Html, Html, Html, Html, Html, Html, Html) Build a tr element without any attributes. Declaration public static Html tr_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element tr_(Html[]) Build a tr element without any attributes. Declaration public static Html tr_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element tr_(IEnumerable<Html>) Build a tr element without any attributes. Declaration public static Html tr_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element tr_(List<Html>) Build a tr element without any attributes. Declaration public static Html tr_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element tr_(ImmutableArray<Html>) Build a tr element without any attributes. Declaration public static Html tr_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element tr_(ImmutableList<Html>) Build a tr element without any attributes. Declaration public static Html tr_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element track(Attr) Build a track element. Declaration public static Html track(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element track(Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element track(Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element track(Attr, Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element track(Attr, Attr, Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element track(Attr, Attr, Attr, Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element track(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element track(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a track element. Declaration public static Html track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element track(Attr[]) Build a track element. Declaration public static Html track(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element track(IEnumerable<Attr>) Build a track element. Declaration public static Html track(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element track(String, String, String, String, String, String, String, String, String, Boolean) Build a track element. Declaration public static Html track(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string label = null, string kind = null, bool default = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String label String kind Boolean default Returns Type Description Html The element u(Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr, Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an u element. Declaration public static TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(Attr[]) Build an u element. Declaration public static TagBuilder u(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(IEnumerable<Attr>) Build an u element. Declaration public static TagBuilder u(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children u(String, String, String, String, String, String) Build an u element. Declaration public static TagBuilder u(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder waiting for the element's children u_(Html) Build an u element without any attributes. Declaration public static Html u_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element u_(Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element u_(Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element u_(Html, Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element u_(Html, Html, Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element u_(Html, Html, Html, Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element u_(Html, Html, Html, Html, Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element u_(Html, Html, Html, Html, Html, Html, Html, Html) Build an u element without any attributes. Declaration public static Html u_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element u_(Html[]) Build an u element without any attributes. Declaration public static Html u_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element u_(IEnumerable<Html>) Build an u element without any attributes. Declaration public static Html u_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element u_(List<Html>) Build an u element without any attributes. Declaration public static Html u_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element u_(ImmutableArray<Html>) Build an u element without any attributes. Declaration public static Html u_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element u_(ImmutableList<Html>) Build an u element without any attributes. Declaration public static Html u_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element ul(Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr, Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build an ul element. Declaration public static TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(Attr[]) Build an ul element. Declaration public static TagBuilder ul(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(IEnumerable<Attr>) Build an ul element. Declaration public static TagBuilder ul(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul(String, String, String, String, String, String, String, Boolean, String) Build an ul element. Declaration public static TagBuilder ul(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, bool reversed = false, string start = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type Boolean reversed String start Returns Type Description TagBuilder A TagBuilder waiting for the element's children ul_(Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element ul_(Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element ul_(Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element ul_(Html, Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element ul_(Html, Html, Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element ul_(Html, Html, Html, Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element ul_(Html, Html, Html, Html, Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element ul_(Html, Html, Html, Html, Html, Html, Html, Html) Build an ul element without any attributes. Declaration public static Html ul_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element ul_(Html[]) Build an ul element without any attributes. Declaration public static Html ul_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element ul_(IEnumerable<Html>) Build an ul element without any attributes. Declaration public static Html ul_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element ul_(List<Html>) Build an ul element without any attributes. Declaration public static Html ul_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element ul_(ImmutableArray<Html>) Build an ul element without any attributes. Declaration public static Html ul_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element ul_(ImmutableList<Html>) Build an ul element without any attributes. Declaration public static Html ul_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element video(Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr, Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a video element. Declaration public static TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(Attr[]) Build a video element. Declaration public static TagBuilder video(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(IEnumerable<Attr>) Build a video element. Declaration public static TagBuilder video(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder waiting for the element's children video(String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, String) Build a video element. Declaration public static TagBuilder video(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string height = null, string width = null, string poster = null, string preload = null, bool autoplay = false, bool loop = false, bool muted = false, bool controls = false, string crossorigin = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String height String width String poster String preload Boolean autoplay Boolean loop Boolean muted Boolean controls String crossorigin Returns Type Description TagBuilder A TagBuilder waiting for the element's children video_(Html) Build a video element without any attributes. Declaration public static Html video_(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html The element video_(Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html The element video_(Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html The element video_(Html, Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html The element video_(Html, Html, Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html The element video_(Html, Html, Html, Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html The element video_(Html, Html, Html, Html, Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html The element video_(Html, Html, Html, Html, Html, Html, Html, Html) Build a video element without any attributes. Declaration public static Html video_(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html The element video_(Html[]) Build a video element without any attributes. Declaration public static Html video_(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html The element video_(IEnumerable<Html>) Build a video element without any attributes. Declaration public static Html video_(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html The element video_(List<Html>) Build a video element without any attributes. Declaration public static Html video_(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html The element video_(ImmutableArray<Html>) Build a video element without any attributes. Declaration public static Html video_(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html The element video_(ImmutableList<Html>) Build a video element without any attributes. Declaration public static Html video_(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html The element wbr(Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description Html The element wbr(Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description Html The element wbr(Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description Html The element wbr(Attr, Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description Html The element wbr(Attr, Attr, Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description Html The element wbr(Attr, Attr, Attr, Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description Html The element wbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description Html The element wbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Build a wbr element. Declaration public static Html wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description Html The element wbr(Attr[]) Build a wbr element. Declaration public static Html wbr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description Html The element wbr(IEnumerable<Attr>) Build a wbr element. Declaration public static Html wbr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description Html The element wbr(String, String, String, String, String, String) Build a wbr element. Declaration public static Html wbr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description Html The element Write(TextWriter) Write the HTML to a TextWriter Declaration public void Write(TextWriter writer) Parameters Type Name Description TextWriter writer The writer Write(TextWriter, HtmlEncoder) Write the HTML to a TextWriter , using an HtmlEncoder to encode input text Declaration public void Write(TextWriter writer, HtmlEncoder htmlEncoder) Parameters Type Name Description TextWriter writer The writer HtmlEncoder htmlEncoder The HTML encoder WriteAsync(TextWriter) Write the HTML to a TextWriter Declaration public Task WriteAsync(TextWriter writer) Parameters Type Name Description TextWriter writer The writer Returns Type Description Task WriteAsync(TextWriter, HtmlEncoder) Write the HTML to a TextWriter , using an HtmlEncoder to encode input text Declaration public Task WriteAsync(TextWriter writer, HtmlEncoder htmlEncoder) Parameters Type Name Description TextWriter writer The writer HtmlEncoder htmlEncoder The HTML encoder Returns Type Description Task Exceptions Type Condition InvalidOperationException Thrown if CanWriteAsync is false (ie if this Html contains an HtmlBuilder . Operators Implicit(Html[] to Html) Put some siblings next to each other. Declaration public static implicit operator Html(Html[] siblings) Parameters Type Name Description Html [] siblings Returns Type Description Html Implicit(TagBuilder to Html) Create a tag with no children. Declaration public static implicit operator Html(TagBuilder tagBuilder) Parameters Type Name Description TagBuilder tagBuilder Returns Type Description Html Implicit(List<Html> to Html) Put some siblings next to each other. Declaration public static implicit operator Html(List<Html> siblings) Parameters Type Name Description List < Html > siblings Returns Type Description Html Implicit(ImmutableArray<Html> to Html) Put some siblings next to each other. Declaration public static implicit operator Html(ImmutableArray<Html> siblings) Parameters Type Name Description ImmutableArray < Html > siblings Returns Type Description Html Implicit(ImmutableList<Html> to Html) Put some siblings next to each other. Declaration public static implicit operator Html(ImmutableList<Html> siblings) Parameters Type Name Description ImmutableList < Html > siblings Returns Type Description Html Implicit(String to Html) Render HTML-encoded text. Declaration public static implicit operator Html(string text) Parameters Type Name Description String text The text to HTML-encode Returns Type Description Html An instance of Html ."
  },
  "Eighty.IHtmlRenderer-1.html": {
    "href": "Eighty.IHtmlRenderer-1.html",
    "title": "Interface IHtmlRenderer<TModel> | Eighty",
    "keywords": "Interface IHtmlRenderer<TModel> Represents a process which can render a TModel as Html Declaration public interface IHtmlRenderer<in TModel> Type Parameters Name Description TModel The model type Methods Render(TModel) Render a TModel as Html Declaration Html Render(TModel model) Parameters Type Name Description TModel model The model Returns Type Description Html The HTML"
  },
  "Eighty.TagBuilder.html": {
    "href": "Eighty.TagBuilder.html",
    "title": "Class TagBuilder | Eighty",
    "keywords": "Class TagBuilder Represents a \"half-open\" HTML tag which is waiting for its children. Inheritance Object TagBuilder Declaration public sealed class TagBuilder : ValueType Methods _(Html) Add children to the tag. Declaration public Html _(Html child1) Parameters Type Name Description Html child1 Returns Type Description Html An instance of Html _(Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2) Parameters Type Name Description Html child1 Html child2 Returns Type Description Html An instance of Html _(Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3) Parameters Type Name Description Html child1 Html child2 Html child3 Returns Type Description Html An instance of Html _(Html, Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3, Html child4) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Returns Type Description Html An instance of Html _(Html, Html, Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3, Html child4, Html child5) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Returns Type Description Html An instance of Html _(Html, Html, Html, Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Returns Type Description Html An instance of Html _(Html, Html, Html, Html, Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Returns Type Description Html An instance of Html _(Html, Html, Html, Html, Html, Html, Html, Html) Add children to the tag. Declaration public Html _(Html child1, Html child2, Html child3, Html child4, Html child5, Html child6, Html child7, Html child8) Parameters Type Name Description Html child1 Html child2 Html child3 Html child4 Html child5 Html child6 Html child7 Html child8 Returns Type Description Html An instance of Html _(Html[]) Add children to the tag. Declaration public Html _(params Html[] children) Parameters Type Name Description Html [] children Returns Type Description Html An instance of Html _(IEnumerable<Html>) Add children to the tag. Declaration public Html _(IEnumerable<Html> children) Parameters Type Name Description IEnumerable < Html > children Returns Type Description Html An instance of Html _(List<Html>) Add children to the tag. Declaration public Html _(List<Html> children) Parameters Type Name Description List < Html > children Returns Type Description Html An instance of Html _(ImmutableArray<Html>) Add children to the tag. Declaration public Html _(ImmutableArray<Html> children) Parameters Type Name Description ImmutableArray < Html > children Returns Type Description Html An instance of Html _(ImmutableList<Html>) Add children to the tag. Declaration public Html _(ImmutableList<Html> children) Parameters Type Name Description ImmutableList < Html > children Returns Type Description Html An instance of Html"
  },
  "Eighty.Twenty.html": {
    "href": "Eighty.Twenty.html",
    "title": "Namespace Eighty.Twenty | Eighty",
    "keywords": "Namespace Eighty.Twenty Classes HtmlBuilder Tools for rendering HTML imperatively. TagBuilder Represents a \"half-open\" tag waiting for its children. Note that the TagBuilder MUST be disposed exactly once, immediately after the children have been written. Interfaces IHtmlBuilderRenderer<TModel> Represents a process which can render a TModel using an HtmlBuilder"
  },
  "Eighty.Twenty.HtmlBuilder.html": {
    "href": "Eighty.Twenty.HtmlBuilder.html",
    "title": "Class HtmlBuilder | Eighty",
    "keywords": "Class HtmlBuilder Tools for rendering HTML imperatively. Inheritance Object HtmlBuilder Declaration public abstract class HtmlBuilder : Object Constructors HtmlBuilder() Declaration protected HtmlBuilder() Properties Null An HtmlBuilder which generates an empty HTML document Declaration public static HtmlBuilder Null { get; } Property Value Type Description HtmlBuilder An HtmlBuilder which generates an empty HTML document Methods a(Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr, Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(Attr[]) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(IEnumerable<Attr>) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written a(String, String, String, String, String, String, String, String, String, String, String) Write an a element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder a(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string href = null, string rel = null, string target = null, string type = null, string download = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String href String rel String target String type String download Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr, Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(Attr[]) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(IEnumerable<Attr>) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written abbr(String, String, String, String, String, String) Write an abbr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder abbr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr, Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(Attr[]) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(IEnumerable<Attr>) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written address(String, String, String, String, String, String) Write an address element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder address(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr, Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(Attr[]) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(IEnumerable<Attr>) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written article(String, String, String, String, String, String) Write an article element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder article(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr, Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(Attr[]) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(IEnumerable<Attr>) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written aside(String, String, String, String, String, String) Write an aside element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder aside(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr, Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(Attr[]) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(IEnumerable<Attr>) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written audio(String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean) Write an audio element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder audio(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string preload = null, string volume = null, bool autoplay = false, bool loop = false, bool muted = false, bool controls = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String preload String volume Boolean autoplay Boolean loop Boolean muted Boolean controls Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr, Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(Attr[]) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(IEnumerable<Attr>) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written b(String, String, String, String, String, String) Write a b element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder b(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written base(Attr) Write a base element. Declaration protected void base(Attr attr1) Parameters Type Name Description Attr attr1 base(Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 base(Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 base(Attr, Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 base(Attr, Attr, Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 base(Attr, Attr, Attr, Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 base(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 base(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a base element. Declaration protected void base(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 base(Attr[]) Write a base element. Declaration protected void base(params Attr[] attrs) Parameters Type Name Description Attr [] attrs base(IEnumerable<Attr>) Write a base element. Declaration protected void base(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs base(String, String, String, String, String, String, String, String) Write a base element. Declaration protected void base(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string href = null, string target = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String href String target bdi(Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr, Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(Attr[]) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(IEnumerable<Attr>) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdi(String, String, String, String, String, String, String) Write a bdi element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdi(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string dir = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String dir Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr, Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(Attr[]) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(IEnumerable<Attr>) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written bdo(String, String, String, String, String, String, String) Write a bdo element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder bdo(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string dir = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String dir Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr, Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(Attr[]) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(IEnumerable<Attr>) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written blockquote(String, String, String, String, String, String) Write a blockquote element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder blockquote(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr, Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(Attr[]) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(IEnumerable<Attr>) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written body(String, String, String, String, String, String) Write a body element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder body(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written br(Attr) Write a br element. Declaration protected void br(Attr attr1) Parameters Type Name Description Attr attr1 br(Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 br(Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 br(Attr, Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 br(Attr, Attr, Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 br(Attr, Attr, Attr, Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 br(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 br(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a br element. Declaration protected void br(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 br(Attr[]) Write a br element. Declaration protected void br(params Attr[] attrs) Parameters Type Name Description Attr [] attrs br(IEnumerable<Attr>) Write a br element. Declaration protected void br(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs br(String, String, String, String, String, String) Write a br element. Declaration protected void br(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Build() Override this method to write your HTML. Declaration protected abstract void Build() button(Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr, Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(Attr[]) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(IEnumerable<Attr>) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written button(String, String, String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, String, String, String, String, String, Boolean) Write a button element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder button(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string type = null, string value = null, bool autofocus = false, bool disabled = false, string src = null, string height = null, string width = null, string form = null, string formaction = null, string formmethod = null, string formtarget = null, string formenctype = null, bool formnovalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String type String value Boolean autofocus Boolean disabled String src String height String width String form String formaction String formmethod String formtarget String formenctype Boolean formnovalidate Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr, Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(Attr[]) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(IEnumerable<Attr>) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written canvas(String, String, String, String, String, String, String, String) Write a canvas element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder canvas(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string height = null, string width = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String height String width Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr, Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(Attr[]) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(IEnumerable<Attr>) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written caption(String, String, String, String, String, String) Write a caption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder caption(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr, Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(Attr[]) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(IEnumerable<Attr>) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written cite(String, String, String, String, String, String) Write a cite element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder cite(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr, Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(Attr[]) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(IEnumerable<Attr>) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written code(String, String, String, String, String, String) Write a code element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder code(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr, Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(Attr[]) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(IEnumerable<Attr>) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written col(String, String, String, String, String, String, String) Write a col element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder col(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string span = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String span Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr, Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(Attr[]) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(IEnumerable<Attr>) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written colgroup(String, String, String, String, String, String, String) Write a colgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder colgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string span = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String span Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr, Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(Attr[]) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(IEnumerable<Attr>) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written data(String, String, String, String, String, String, String) Write a data element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder data(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr, Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(Attr[]) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(IEnumerable<Attr>) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written datalist(String, String, String, String, String, String) Write a datalist element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder datalist(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr, Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(Attr[]) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(IEnumerable<Attr>) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dd(String, String, String, String, String, String) Write a dd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dd(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr, Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(Attr[]) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(IEnumerable<Attr>) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written details(String, String, String, String, String, String, Boolean) Write a details element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder details(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, bool open = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Boolean open Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr, Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(Attr[]) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(IEnumerable<Attr>) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dfn(String, String, String, String, String, String) Write a dfn element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dfn(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr, Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(Attr[]) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(IEnumerable<Attr>) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dialog(String, String, String, String, String, String, Boolean) Write a dialog element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dialog(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, bool open = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Boolean open Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr, Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(Attr[]) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(IEnumerable<Attr>) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written div(String, String, String, String, String, String) Write a div element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder div(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr, Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(Attr[]) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(IEnumerable<Attr>) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dl(String, String, String, String, String, String) Write a dl element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dl(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written doctype() Write the <!DOCTYPE HTML> preamble. Declaration protected void doctype() doctypeHtml() Write the <!DOCTYPE HTML> preamble. Declaration protected TagBuilder doctypeHtml() Returns Type Description TagBuilder dt(Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr, Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(Attr[]) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(IEnumerable<Attr>) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written dt(String, String, String, String, String, String) Write a dt element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder dt(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr, Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(Attr[]) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(IEnumerable<Attr>) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written em(String, String, String, String, String, String) Write an em element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder em(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written embed(Attr) Write an embed element. Declaration protected void embed(Attr attr1) Parameters Type Name Description Attr attr1 embed(Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 embed(Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 embed(Attr, Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 embed(Attr, Attr, Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 embed(Attr, Attr, Attr, Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 embed(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 embed(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an embed element. Declaration protected void embed(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 embed(Attr[]) Write an embed element. Declaration protected void embed(params Attr[] attrs) Parameters Type Name Description Attr [] attrs embed(IEnumerable<Attr>) Write an embed element. Declaration protected void embed(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs embed(String, String, String, String, String, String, String, String, String, String) Write an embed element. Declaration protected void embed(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null, string height = null, string width = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src String height String width fieldset(Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr, Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(Attr[]) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(IEnumerable<Attr>) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written fieldset(String, String, String, String, String, String, String, Boolean, String) Write a fieldset element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder fieldset(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, bool disabled = false, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name Boolean disabled String form Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr, Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(Attr[]) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(IEnumerable<Attr>) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figcaption(String, String, String, String, String, String) Write a figcaption element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figcaption(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr, Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(Attr[]) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(IEnumerable<Attr>) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written figure(String, String, String, String, String, String) Write a figure element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder figure(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr, Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(Attr[]) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(IEnumerable<Attr>) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written footer(String, String, String, String, String, String) Write a footer element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder footer(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr, Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(Attr[]) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(IEnumerable<Attr>) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written form(String, String, String, String, String, String, String, String, String, String, String, String, Boolean) Write a form element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder form(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string action = null, string method = null, string autocomplete = null, string target = null, string enctype = null, bool novalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String action String method String autocomplete String target String enctype Boolean novalidate Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr, Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(Attr[]) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(IEnumerable<Attr>) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h1(String, String, String, String, String, String) Write an h1 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h1(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr, Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(Attr[]) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(IEnumerable<Attr>) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h2(String, String, String, String, String, String) Write an h2 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h2(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr, Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(Attr[]) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(IEnumerable<Attr>) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h3(String, String, String, String, String, String) Write an h3 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h3(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr, Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(Attr[]) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(IEnumerable<Attr>) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h4(String, String, String, String, String, String) Write an h4 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h4(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr, Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(Attr[]) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(IEnumerable<Attr>) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h5(String, String, String, String, String, String) Write an h5 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h5(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr, Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(Attr[]) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(IEnumerable<Attr>) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written h6(String, String, String, String, String, String) Write an h6 element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder h6(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr, Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(Attr[]) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(IEnumerable<Attr>) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written head(String, String, String, String, String, String) Write a head element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder head(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr, Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(Attr[]) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(IEnumerable<Attr>) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written header(String, String, String, String, String, String) Write a header element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder header(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr, Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(Attr[]) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(IEnumerable<Attr>) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hgroup(String, String, String, String, String, String) Write a hgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder hgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written hr(Attr) Write an hr element. Declaration protected void hr(Attr attr1) Parameters Type Name Description Attr attr1 hr(Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 hr(Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 hr(Attr, Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 hr(Attr, Attr, Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 hr(Attr, Attr, Attr, Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 hr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 hr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an hr element. Declaration protected void hr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 hr(Attr[]) Write an hr element. Declaration protected void hr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs hr(IEnumerable<Attr>) Write an hr element. Declaration protected void hr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs hr(String, String, String, String, String, String) Write an hr element. Declaration protected void hr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable html(Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr, Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(Attr[]) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written Html(Html) Write HTML. Declaration protected void Html(Html html) Parameters Type Name Description Html html The HTML to write. html(IEnumerable<Attr>) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written html(String, String, String, String, String, String, String) Write an html element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder html(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string xmlns = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String xmlns Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr, Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(Attr[]) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(IEnumerable<Attr>) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written i(String, String, String, String, String, String) Write an i element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder i(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written img(Attr) Write an img element. Declaration protected void img(Attr attr1) Parameters Type Name Description Attr attr1 img(Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 img(Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 img(Attr, Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 img(Attr, Attr, Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 img(Attr, Attr, Attr, Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 img(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 img(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an img element. Declaration protected void img(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 img(Attr[]) Write an img element. Declaration protected void img(params Attr[] attrs) Parameters Type Name Description Attr [] attrs img(IEnumerable<Attr>) Write an img element. Declaration protected void img(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs img(String, String, String, String, String, String, String, String, String, String, String, String, String) Write an img element. Declaration protected void img(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string alt = null, string height = null, string width = null, string srcset = null, string sizes = null, string crossorigin = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String alt String height String width String srcset String sizes String crossorigin input(Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr, Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(Attr[]) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(IEnumerable<Attr>) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written input(String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean) Write an input element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder input(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string type = null, string multiple = null, string value = null, string placeholder = null, string size = null, string autocomplete = null, string list = null, bool autofocus = false, bool checked = false, bool disabled = false, bool readonly = false, bool required = false, string src = null, string height = null, string width = null, string max = null, string min = null, string step = null, string maxlength = null, string minlength = null, string pattern = null, string form = null, string formaction = null, string formmethod = null, string formtarget = null, string formenctype = null, bool formnovalidate = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String type String multiple String value String placeholder String size String autocomplete String list Boolean autofocus Boolean checked Boolean disabled Boolean readonly Boolean required String src String height String width String max String min String step String maxlength String minlength String pattern String form String formaction String formmethod String formtarget String formenctype Boolean formnovalidate Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr, Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(Attr[]) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(IEnumerable<Attr>) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written kbd(String, String, String, String, String, String) Write a kbd element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder kbd(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr, Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(Attr[]) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(IEnumerable<Attr>) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written label(String, String, String, String, String, String, String) Write a label element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder label(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string for = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String for Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr, Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(Attr[]) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(IEnumerable<Attr>) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written legend(String, String, String, String, String, String) Write a legend element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder legend(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr, Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(Attr[]) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(IEnumerable<Attr>) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written li(String, String, String, String, String, String, String) Write an li element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder li(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written link(Attr) Write a link element. Declaration protected void link(Attr attr1) Parameters Type Name Description Attr attr1 link(Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 link(Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 link(Attr, Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 link(Attr, Attr, Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 link(Attr, Attr, Attr, Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 link(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 link(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a link element. Declaration protected void link(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 link(Attr[]) Write a link element. Declaration protected void link(params Attr[] attrs) Parameters Type Name Description Attr [] attrs link(IEnumerable<Attr>) Write a link element. Declaration protected void link(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs link(String, String, String, String, String, String, String, String, String, String, String, String) Write a link element. Declaration protected void link(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string crossorigin = null, string rel = null, string href = null, string type = null, string media = null, string sizes = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String crossorigin String rel String href String type String media String sizes main(Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr, Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(Attr[]) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(IEnumerable<Attr>) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written main(String, String, String, String, String, String) Write a main element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder main(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr, Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(Attr[]) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(IEnumerable<Attr>) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written mark(String, String, String, String, String, String) Write a mark element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder mark(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr, Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(Attr[]) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(IEnumerable<Attr>) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menu(String, String, String, String, String, String, String, String) Write a menu element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menu(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string label = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String label Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr, Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(Attr[]) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(IEnumerable<Attr>) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written menuitem(String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean) Write a menuitem element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder menuitem(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string label = null, string command = null, string icon = null, string radiogroup = null, bool disabled = false, bool default = false, bool checked = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String label String command String icon String radiogroup Boolean disabled Boolean default Boolean checked Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meta(Attr) Write a meta element. Declaration protected void meta(Attr attr1) Parameters Type Name Description Attr attr1 meta(Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 meta(Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 meta(Attr, Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 meta(Attr, Attr, Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 meta(Attr, Attr, Attr, Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 meta(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 meta(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a meta element. Declaration protected void meta(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 meta(Attr[]) Write a meta element. Declaration protected void meta(params Attr[] attrs) Parameters Type Name Description Attr [] attrs meta(IEnumerable<Attr>) Write a meta element. Declaration protected void meta(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs meta(String, String, String, String, String, String, String, String) Write a meta element. Declaration protected void meta(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string charset = null, string target = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String charset String target meter(Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr, Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(Attr[]) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(IEnumerable<Attr>) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written meter(String, String, String, String, String, String, String, String, String, String, String, String, String) Write a meter element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder meter(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null, string form = null, string max = null, string min = null, string low = null, string high = null, string optimum = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value String form String max String min String low String high String optimum Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr, Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(Attr[]) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(IEnumerable<Attr>) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written nav(String, String, String, String, String, String) Write a nav element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder nav(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr, Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(Attr[]) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(IEnumerable<Attr>) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written noscript(String, String, String, String, String, String) Write a noscript element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder noscript(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr, Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(Attr[]) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(IEnumerable<Attr>) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written object(String, String, String, String, String, String, String, String, String, String, String) Write an object element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder object(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string data = null, string height = null, string width = null, string name = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String data String height String width String name Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr, Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(Attr[]) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(IEnumerable<Attr>) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ol(String, String, String, String, String, String, String, Boolean, String) Write an ol element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ol(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, bool reversed = false, string start = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type Boolean reversed String start Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr, Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(Attr[]) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(IEnumerable<Attr>) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written optgroup(String, String, String, String, String, String, String, Boolean) Write an optgroup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder optgroup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string label = null, bool disabled = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String label Boolean disabled Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr, Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(Attr[]) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(IEnumerable<Attr>) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written option(String, String, String, String, String, String, String, String, Boolean, Boolean) Write an option element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder option(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string label = null, string value = null, bool disabled = false, bool selected = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String label String value Boolean disabled Boolean selected Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr, Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(Attr[]) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(IEnumerable<Attr>) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written output(String, String, String, String, String, String, String, String, String) Write an output element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder output(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string for = null, string name = null, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String for String name String form Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr, Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(Attr[]) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(IEnumerable<Attr>) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written p(String, String, String, String, String, String) Write a p element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder p(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written param(Attr) Write a param element. Declaration protected void param(Attr attr1) Parameters Type Name Description Attr attr1 param(Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 param(Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 param(Attr, Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 param(Attr, Attr, Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 param(Attr, Attr, Attr, Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 param(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 param(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a param element. Declaration protected void param(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 param(Attr[]) Write a param element. Declaration protected void param(params Attr[] attrs) Parameters Type Name Description Attr [] attrs param(IEnumerable<Attr>) Write a param element. Declaration protected void param(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs param(String, String, String, String, String, String, String, String) Write a param element. Declaration protected void param(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string value = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String value Partial(HtmlBuilder) Write partial 's HTML into this HtmlBuilder 's output stream. Declaration protected void Partial(HtmlBuilder partial) Parameters Type Name Description HtmlBuilder partial The child HtmlBuilder picture(Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr, Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(Attr[]) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(IEnumerable<Attr>) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written picture(String, String, String, String, String, String) Write a picture element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder picture(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr, Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(Attr[]) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(IEnumerable<Attr>) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written pre(String, String, String, String, String, String) Write a pre element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder pre(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr, Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(Attr[]) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(IEnumerable<Attr>) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written progress(String, String, String, String, String, String, String, String) Write a progress element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder progress(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string value = null, string max = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String value String max Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr, Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(Attr[]) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(IEnumerable<Attr>) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written q(String, String, String, String, String, String, String) Write a q element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder q(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string cite = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String cite Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written Raw(String) Render a string without HTML-encoding it first. Declaration protected void Raw(string rawHtml) Parameters Type Name Description String rawHtml The pre-encoded string s(Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr, Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(Attr[]) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(IEnumerable<Attr>) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written s(String, String, String, String, String, String) Write an s element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder s(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr, Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(Attr[]) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(IEnumerable<Attr>) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written samp(String, String, String, String, String, String) Write a samp element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder samp(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr, Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(Attr[]) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(IEnumerable<Attr>) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written script(String, String, String, String, String, String, String, String, String, Boolean) Write a script element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder script(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null, string crossorigin = null, bool async = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src String crossorigin Boolean async Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr, Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(Attr[]) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(IEnumerable<Attr>) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written section(String, String, String, String, String, String) Write a section element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder section(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr, Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(Attr[]) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(IEnumerable<Attr>) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written select(String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, String) Write a select element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder select(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string multiple = null, string size = null, bool autofocus = false, bool disabled = false, bool required = false, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String multiple String size Boolean autofocus Boolean disabled Boolean required String form Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written SelfClosingTag(String, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1) Parameters Type Name Description String name Attr attr1 SelfClosingTag(String, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2) Parameters Type Name Description String name Attr attr1 Attr attr2 SelfClosingTag(String, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 SelfClosingTag(String, Attr, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 SelfClosingTag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 SelfClosingTag(String, Attr[]) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, params Attr[] attrs) Parameters Type Name Description String name Attr [] attrs SelfClosingTag(String, IEnumerable<Attr>) Write a tag which does not take children. Declaration protected void SelfClosingTag(string name, IEnumerable<Attr> attrs) Parameters Type Name Description String name IEnumerable < Attr > attrs small(Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr, Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(Attr[]) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(IEnumerable<Attr>) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written small(String, String, String, String, String, String) Write a small element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder small(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written source(Attr) Write a source element. Declaration protected void source(Attr attr1) Parameters Type Name Description Attr attr1 source(Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 source(Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 source(Attr, Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 source(Attr, Attr, Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 source(Attr, Attr, Attr, Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 source(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 source(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a source element. Declaration protected void source(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 source(Attr[]) Write a source element. Declaration protected void source(params Attr[] attrs) Parameters Type Name Description Attr [] attrs source(IEnumerable<Attr>) Write a source element. Declaration protected void source(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs source(String, String, String, String, String, String, String, String) Write a source element. Declaration protected void source(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string src = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String src span(Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr, Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(Attr[]) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(IEnumerable<Attr>) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written span(String, String, String, String, String, String) Write a span element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder span(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr, Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(Attr[]) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(IEnumerable<Attr>) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written strong(String, String, String, String, String, String) Write a strong element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder strong(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr, Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(Attr[]) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(IEnumerable<Attr>) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written style(String, String, String, String, String, String, String, String) Write a style element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder style(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, string media = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type String media Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr, Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(Attr[]) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(IEnumerable<Attr>) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sub(String, String, String, String, String, String) Write a sub element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sub(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr, Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(Attr[]) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(IEnumerable<Attr>) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written summary(String, String, String, String, String, String) Write a summary element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder summary(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr, Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(Attr[]) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(IEnumerable<Attr>) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written sup(String, String, String, String, String, String) Write a sup element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder sup(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr, Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(Attr[]) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(IEnumerable<Attr>) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written table(String, String, String, String, String, String) Write a table element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder table(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written Tag(String, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1) Parameters Type Name Description String name Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2) Parameters Type Name Description String name Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description String name Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, Attr[]) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, params Attr[] attrs) Parameters Type Name Description String name Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. Tag(String, IEnumerable<Attr>) Write a tag which takes children. Declaration protected TagBuilder Tag(string name, IEnumerable<Attr> attrs) Parameters Type Name Description String name IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed after setting the tag's children. tbody(Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr, Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(Attr[]) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(IEnumerable<Attr>) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tbody(String, String, String, String, String, String) Write a tbody element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tbody(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr, Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(Attr[]) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(IEnumerable<Attr>) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written td(String, String, String, String, String, String, String, String, String) Write a td element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder td(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string colspan = null, string rowspan = null, string headers = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String colspan String rowspan String headers Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written Text(String) Write HTML-encoded text. Declaration protected void Text(string text) Parameters Type Name Description String text The text to HTML-encode textarea(Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr, Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(Attr[]) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(IEnumerable<Attr>) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written textarea(String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, String, String, String, String) Write a textarea element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder textarea(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string name = null, string placeholder = null, string autocomplete = null, string cols = null, string rows = null, string wrap = null, bool autofocus = false, bool disabled = false, bool readonly = false, bool required = false, string src = null, string maxlength = null, string minlength = null, string form = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String name String placeholder String autocomplete String cols String rows String wrap Boolean autofocus Boolean disabled Boolean readonly Boolean required String src String maxlength String minlength String form Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr, Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(Attr[]) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(IEnumerable<Attr>) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tfoot(String, String, String, String, String, String) Write a tfoot element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tfoot(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr, Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(Attr[]) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(IEnumerable<Attr>) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written th(String, String, String, String, String, String, String, String, String, String) Write a th element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder th(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string colspan = null, string rowspan = null, string headers = null, string scope = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String colspan String rowspan String headers String scope Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr, Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(Attr[]) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(IEnumerable<Attr>) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written thead(String, String, String, String, String, String) Write a thead element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder thead(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr, Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(Attr[]) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(IEnumerable<Attr>) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written time(String, String, String, String, String, String, String) Write a time element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder time(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string datetime = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String datetime Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr, Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(Attr[]) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(IEnumerable<Attr>) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written title(String, String, String, String, String, String) Write a title element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder title(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ToString() Render the HTML to a string. Declaration public override string ToString() Returns Type Description String The HTML as a string tr(Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr, Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(Attr[]) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(IEnumerable<Attr>) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written tr(String, String, String, String, String, String) Write a tr element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder tr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written track(Attr) Write a track element. Declaration protected void track(Attr attr1) Parameters Type Name Description Attr attr1 track(Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 track(Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 track(Attr, Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 track(Attr, Attr, Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 track(Attr, Attr, Attr, Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 track(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 track(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a track element. Declaration protected void track(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 track(Attr[]) Write a track element. Declaration protected void track(params Attr[] attrs) Parameters Type Name Description Attr [] attrs track(IEnumerable<Attr>) Write a track element. Declaration protected void track(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs track(String, String, String, String, String, String, String, String, String, Boolean) Write a track element. Declaration protected void track(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string label = null, string kind = null, bool default = false) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String label String kind Boolean default u(Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr, Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(Attr[]) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(IEnumerable<Attr>) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written u(String, String, String, String, String, String) Write an u element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder u(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr, Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(Attr[]) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(IEnumerable<Attr>) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written ul(String, String, String, String, String, String, String, Boolean, String) Write an ul element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder ul(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string type = null, bool reversed = false, string start = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String type Boolean reversed String start Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1) Parameters Type Name Description Attr attr1 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr, Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(Attr[]) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(params Attr[] attrs) Parameters Type Name Description Attr [] attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(IEnumerable<Attr>) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written video(String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, String) Write a video element. The returned value MUST be disposed exactly once, immediately after the children have been written. Declaration protected TagBuilder video(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null, string src = null, string height = null, string width = null, string poster = null, string preload = null, bool autoplay = false, bool loop = false, bool muted = false, bool controls = false, string crossorigin = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable String src String height String width String poster String preload Boolean autoplay Boolean loop Boolean muted Boolean controls String crossorigin Returns Type Description TagBuilder A TagBuilder which MUST be disposed exactly once, immediately after the children have been written wbr(Attr) Write a wbr element. Declaration protected void wbr(Attr attr1) Parameters Type Name Description Attr attr1 wbr(Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2) Parameters Type Name Description Attr attr1 Attr attr2 wbr(Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 wbr(Attr, Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 wbr(Attr, Attr, Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 wbr(Attr, Attr, Attr, Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 wbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 wbr(Attr, Attr, Attr, Attr, Attr, Attr, Attr, Attr) Write a wbr element. Declaration protected void wbr(Attr attr1, Attr attr2, Attr attr3, Attr attr4, Attr attr5, Attr attr6, Attr attr7, Attr attr8) Parameters Type Name Description Attr attr1 Attr attr2 Attr attr3 Attr attr4 Attr attr5 Attr attr6 Attr attr7 Attr attr8 wbr(Attr[]) Write a wbr element. Declaration protected void wbr(params Attr[] attrs) Parameters Type Name Description Attr [] attrs wbr(IEnumerable<Attr>) Write a wbr element. Declaration protected void wbr(IEnumerable<Attr> attrs) Parameters Type Name Description IEnumerable < Attr > attrs wbr(String, String, String, String, String, String) Write a wbr element. Declaration protected void wbr(string id = null, string class = null, string style = null, string title = null, string tabindex = null, string contenteditable = null) Parameters Type Name Description String id String class String style String title String tabindex String contenteditable Write(TextWriter) Render the HTML into a TextWriter Declaration public void Write(TextWriter writer) Parameters Type Name Description TextWriter writer The writer Write(TextWriter, HtmlEncoder) Render the HTML into a TextWriter , using an HtmlEncoder to encode input text Declaration public void Write(TextWriter writer, HtmlEncoder htmlEncoder) Parameters Type Name Description TextWriter writer The writer HtmlEncoder htmlEncoder The HTML encoder"
  },
  "Eighty.Twenty.IHtmlBuilderRenderer-1.html": {
    "href": "Eighty.Twenty.IHtmlBuilderRenderer-1.html",
    "title": "Interface IHtmlBuilderRenderer<TModel> | Eighty",
    "keywords": "Interface IHtmlBuilderRenderer<TModel> Represents a process which can render a TModel using an HtmlBuilder Declaration public interface IHtmlBuilderRenderer<in TModel> Type Parameters Name Description TModel The model type Methods GetHtmlBuilder(TModel) Get an HtmlBuilder which can render model as HTML Declaration HtmlBuilder GetHtmlBuilder(TModel model) Parameters Type Name Description TModel model The model Returns Type Description HtmlBuilder A HtmlBuilder"
  },
  "Eighty.Twenty.TagBuilder.html": {
    "href": "Eighty.Twenty.TagBuilder.html",
    "title": "Class TagBuilder | Eighty",
    "keywords": "Class TagBuilder Represents a \"half-open\" tag waiting for its children. Note that the TagBuilder MUST be disposed exactly once, immediately after the children have been written. Inheritance Object TagBuilder Implements IDisposable Declaration public sealed class TagBuilder : ValueType Methods Dispose() Write the closing tag. This method MUST be called exactly once, immediately after the children have been written. Declaration public void Dispose() Implements System.IDisposable"
  },
  "index.html": {
    "href": "index.html",
    "title": "Page Redirection",
    "keywords": ""
  }
}